events {}

http {
  # =================================================================
  # CONFIGURACIÓN DE RATE LIMITING Y THROTTLING
  # =================================================================
  
  # Zona para rate limiting general (10 req/seg por IP)
  # - Ventana de tiempo: 1 minuto
  # - Memoria asignada: 10MB (aprox. 160,000 IPs)
  limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
  
  # Zona para API Gateway (5 req/seg por IP)
  # - Límite específico para endpoints de API más críticos
  limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
  
  # =================================================================
  # CONFIGURACIÓN DE LOGS PARA AUDITORÍA
  # =================================================================
  
  # Formato de log personalizado para auditoría de rate limiting
  log_format rate_limit_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rate_limit_status="$limit_req_status" '
                           'rate_limit_delay="$upstream_response_time"';
  
  # Log específico para eventos de rate limiting
  access_log /var/log/nginx/rate_limit.log rate_limit_log;
  
  upstream frontend_web {
    server cc_fe_web:3000;
  }

  upstream api_gateway {
    server cc_ag:8080;
  }

  server {
    listen 80;

    location /api/ {
      # RATE LIMITING PRINCIPAL PARA API
      # - Límite: 5 req/seg por IP
      # - Burst: Permite hasta 3 peticiones extra
      # - Delay: Las primeras 2 peticiones extra se retrasan (THROTTLING)
      # - La petición 3 extra se rechaza (RATE LIMITING)
      limit_req zone=api burst=3 delay=2;
      
      # - Retorna 429 "Too Many Requests" 
      limit_req_status 429;
      
      # - Registra todas las peticiones a la API para seguimiento
      access_log /var/log/nginx/api_requests.log rate_limit_log;
      
      proxy_pass http://api_gateway/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ws/ {
      # RATE LIMITING PARA WEBSOCKETS
      # - Límite: 10 req/seg por IP (más permisivo que API)
      # - Burst: Permite hasta 5 conexiones/mensajes extra
      # - Delay: Throttling suave para no romper la experiencia en tiempo real
      limit_req zone=general burst=5 delay=3;
      
      limit_req_status 429;
      
      # - Seguimiento específico de conexiones WebSocket
      access_log /var/log/nginx/websocket_requests.log rate_limit_log;
      
      proxy_pass http://cc_websocket_manager:8004/ws/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
    }

    location / {
      # RATE LIMITING GENERAL PARA FRONTEND
      # - Límite: 10 req/seg por IP (zona general)
      # - Burst: Permite hasta 8 peticiones extra para carga de recursos
      # - Delay: Las primeras 5 peticiones extra se retrasan suavemente
      limit_req zone=general burst=8 delay=5;
      
      limit_req_status 429;

      # - Seguimiento de acceso al frontend web
      access_log /var/log/nginx/frontend_requests.log rate_limit_log;
      
      proxy_pass http://frontend_web/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}
