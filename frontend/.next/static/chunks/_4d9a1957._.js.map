{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/Question.tsx"],"sourcesContent":["import { useState } from 'react';\n\ninterface Option {\n  letter: string;\n  text: string;\n}\n\ninterface QuestionProps {\n  questionNumber: number;\n  totalQuestions: number;\n  // points: number;\n  question: string;\n  options: Option[];\n  onAnswerSelect: (answer: string) => void;\n}\n\nexport function Question({\n  questionNumber,\n  totalQuestions,\n  // points,\n  question,\n  options,\n  onAnswerSelect,\n}: QuestionProps) {\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n\n  const handleAnswerSelect = (letter: string, text: string) => {\n    if (selectedAnswer === null) {\n      setSelectedAnswer(letter);\n      onAnswerSelect(text);\n    }\n  };\n\n  return (\n    <div className='bg-white rounded-xl shadow-lg mb-6 p-6 border-2 border-emerald-300'>\n      <div className='justify-between mb-3 flex'>\n        <span className='bg-emerald-600 text-white px-4 py-1 rounded-full text-sm font-semibold'>\n          Pregunta {questionNumber} de {totalQuestions}\n        </span>\n        {/* <span className='bg-emerald-100 text-emerald-800 px-4 py-1 rounded-full text-sm font-semibold'>\n          +{points} puntos\n        </span> */}\n      </div>\n      <p className='text-xl md:text-2xl font-bold text-gray-800 mb-6'>\n        {question}\n      </p>\n      <div className='md:grid-cols-2 grid grid-cols-1 gap-4'>\n        {options.map((option) => (\n          <button\n            key={option.letter}\n            type='button'\n            onClick={() => handleAnswerSelect(option.letter, option.text)}\n            disabled={selectedAnswer !== null}\n            className={`answer-option border-2 p-4 transition-all duration-200 transform\n              bg-white text-gray-700 rounded-lg text-left\n              ${\n                selectedAnswer === null\n                  ? 'hover:bg-emerald-50 border-emerald-300 hover:border-emerald-500 hover:-translate-y-1 hover:shadow-md'\n                  : selectedAnswer === option.letter\n                  ? 'border-emerald-500 bg-emerald-50'\n                  : 'border-gray-200 opacity-50 cursor-not-allowed'\n              }`}\n          >\n            <span\n              className={`w-8 h-8 rounded-full text-center font-bold leading-8 mr-2 inline-block\n                ${\n                  selectedAnswer === option.letter\n                    ? 'bg-emerald-500 text-white'\n                    : 'bg-emerald-100 text-emerald-700'\n                }`}\n            >\n              {option.letter}\n            </span>\n            <span className='font-medium'>{option.text}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;;AAgBO,SAAS,SAAS,EACvB,cAAc,EACd,cAAc,EACd,UAAU;AACV,QAAQ,EACR,OAAO,EACP,cAAc,EACA;;IACd,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpE,MAAM,qBAAqB,CAAC,QAAgB;QAC1C,IAAI,mBAAmB,MAAM;YAC3B,kBAAkB;YAClB,eAAe;QACjB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAK,WAAU;;wBAAyE;wBAC7E;wBAAe;wBAAK;;;;;;;;;;;;0BAMlC,6LAAC;gBAAE,WAAU;0BACV;;;;;;0BAEH,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAEC,MAAK;wBACL,SAAS,IAAM,mBAAmB,OAAO,MAAM,EAAE,OAAO,IAAI;wBAC5D,UAAU,mBAAmB;wBAC7B,WAAW,CAAC;;cAEV,EACE,mBAAmB,OACf,yGACA,mBAAmB,OAAO,MAAM,GAChC,qCACA,iDACJ;;0CAEJ,6LAAC;gCACC,WAAW,CAAC;gBACV,EACE,mBAAmB,OAAO,MAAM,GAC5B,8BACA,mCACJ;0CAEH,OAAO,MAAM;;;;;;0CAEhB,6LAAC;gCAAK,WAAU;0CAAe,OAAO,IAAI;;;;;;;uBAxBrC,OAAO,MAAM;;;;;;;;;;;;;;;;AA8B9B;GA/DgB;KAAA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/DuelHeader.tsx"],"sourcesContent":["interface DuelHeaderProps {\n  title: string;\n  opponent: string;\n  playerProgress: number;\n  opponentProgress: number;\n  totalQuestions: number;\n}\n\nexport function DuelHeader({\n  title,\n  opponent,\n  playerProgress,\n  // opponentProgress,\n  totalQuestions,\n}: DuelHeaderProps) {\n  return (\n    <div className='bg-emerald-100 rounded-lg mb-6 shadow-sm p-4'>\n      <div className='justify-between items-center flex'>\n        <div>\n          <p className='text-xl font-bold text-emerald-800'>{title}</p>\n          <p className='text-gray-600'>Vs. {opponent}</p>\n        </div>\n        {/* <div className='text-center bg-white rounded-lg shadow-md p-3'>\n          <p className='text-xl font-bold text-emerald-700'>{timeRemaining}</p>\n          <p className='text-sm text-gray-500'>Tiempo restante</p>\n        </div> */}\n      </div>\n      <div className='mt-4 items-center justify-between flex'>\n        <div className='items-center mr-4 flex space-x-2 flex-1'>\n          <div className='h-3 bg-emerald-200 rounded-full flex-grow'>\n            <div\n              style={{ width: `${(playerProgress / totalQuestions) * 100}%` }}\n              className='h-3 bg-emerald-500 rounded-full'\n            ></div>\n          </div>\n          <span className='font-medium text-gray-700'>\n            {playerProgress}/{totalQuestions}\n          </span>\n        </div>\n        <div className='items-center flex space-x-2 flex-1'>\n          {/* <div className='h-3 bg-gray-200 rounded-full flex-grow'>\n            <div\n              style={{ width: `${(opponentProgress / totalQuestions) * 100}%` }}\n              className='h-3 bg-gray-500 rounded-full'\n            ></div>\n          </div> */}\n          {/* <span className='font-medium text-gray-700'>\n            {opponentProgress}/{totalQuestions}\n          </span> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAQO,SAAS,WAAW,EACzB,KAAK,EACL,QAAQ,EACR,cAAc,EACd,oBAAoB;AACpB,cAAc,EACE;IAChB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;;sCACC,6LAAC;4BAAE,WAAU;sCAAsC;;;;;;sCACnD,6LAAC;4BAAE,WAAU;;gCAAgB;gCAAK;;;;;;;;;;;;;;;;;;0BAOtC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,OAAO;wCAAE,OAAO,GAAG,AAAC,iBAAiB,iBAAkB,IAAI,CAAC,CAAC;oCAAC;oCAC9D,WAAU;;;;;;;;;;;0CAGd,6LAAC;gCAAK,WAAU;;oCACb;oCAAe;oCAAE;;;;;;;;;;;;;kCAGtB,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAcvB;KA7CgB","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/DuelResults.tsx"],"sourcesContent":["import {\n  TrophyIcon,\n  XCircleIcon,\n  HandRaisedIcon,\n} from '@heroicons/react/24/outline';\n\ninterface EloChange {\n  change: number;\n  current: number;\n  previous: number;\n}\n\ninterface DuelResultsData {\n  is_draw: boolean;\n  player1_elo: EloChange;\n  player1_rank: string;\n  player1_score: number;\n  player2_elo: EloChange;\n  player2_rank: string;\n  player2_score: number;\n  winner_id: string;\n  player1_id: string;\n  player2_id: string;\n}\n\ninterface DuelResultsProps {\n  results: DuelResultsData;\n  playerId: string;\n  opponentId: string;\n}\n\nexport function DuelResults({\n  results,\n  playerId,\n  opponentId,\n}: DuelResultsProps) {\n  const isWinner = results.winner_id === playerId;\n  const isPlayer1 = playerId === results.player1_id;\n  console.log('playerId', playerId);\n  console.log('results.player1_id', results.player1_id);\n  console.log('opponentId', opponentId);\n  console.log('isWinner', isWinner);\n  console.log('isPlayer1', isPlayer1);\n\n  const playerScore = isPlayer1 ? results.player1_score : results.player2_score;\n  const opponentScore = isPlayer1\n    ? results.player2_score\n    : results.player1_score;\n  const playerElo = isPlayer1 ? results.player1_elo : results.player2_elo;\n  const opponentElo = isPlayer1 ? results.player2_elo : results.player1_elo;\n  const playerRank = isPlayer1 ? results.player1_rank : results.player2_rank;\n  const opponentRank = isPlayer1 ? results.player2_rank : results.player1_rank;\n\n  return (\n    <div className='min-h-screen flex items-center justify-center bg-gray-50'>\n      <div className='max-w-2xl w-full bg-white rounded-xl shadow-lg p-8'>\n        <div className='text-center mb-8'>\n          <div className='flex justify-center mb-4'>\n            {results.is_draw ? (\n              <HandRaisedIcon className='h-16 w-16 text-yellow-500' />\n            ) : isWinner ? (\n              <TrophyIcon className='h-16 w-16 text-emerald-500' />\n            ) : (\n              <XCircleIcon className='h-16 w-16 text-red-500' />\n            )}\n          </div>\n          <h2 className='text-3xl font-bold text-gray-800 mb-2'>\n            {results.is_draw ? '¡Empate!' : isWinner ? '¡Victoria!' : 'Derrota'}\n          </h2>\n          <p className='text-gray-600'>\n            {results.is_draw\n              ? 'Ambos jugadores han empatado'\n              : isWinner\n              ? '¡Has ganado el duelo!'\n              : 'Tu oponente ha ganado el duelo'}\n          </p>\n        </div>\n\n        <div className='grid grid-cols-2 gap-8'>\n          {/* Player Stats */}\n          <div className='bg-emerald-50 rounded-lg p-6'>\n            <h3 className='text-xl font-semibold text-emerald-800 mb-4'>\n              Tus Resultados\n            </h3>\n            <div className='space-y-3'>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Puntuación:</span>\n                <span\n                  className={`font-semibold ${\n                    playerScore >= 0 ? 'text-emerald-600' : 'text-red-600'\n                  }`}\n                >\n                  {playerScore > 0 ? '+' : ''}\n                  {playerScore}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Rango:</span>\n                <span className='font-semibold text-emerald-800'>\n                  {playerRank}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>ELO:</span>\n                <div className='text-right'>\n                  <span className='font-semibold text-emerald-800'>\n                    {playerElo.current}\n                  </span>\n                  <span\n                    className={`ml-2 ${\n                      playerElo.change >= 0\n                        ? 'text-emerald-600'\n                        : 'text-red-600'\n                    }`}\n                  >\n                    ({playerElo.change > 0 ? '+' : ''}\n                    {playerElo.change})\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Opponent Stats */}\n          <div className='bg-gray-50 rounded-lg p-6'>\n            <h3 className='text-xl font-semibold text-gray-800 mb-4'>\n              Resultados del Oponente\n            </h3>\n            <div className='space-y-3'>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Puntuación:</span>\n                <span\n                  className={`font-semibold ${\n                    opponentScore >= 0 ? 'text-emerald-600' : 'text-red-600'\n                  }`}\n                >\n                  {opponentScore > 0 ? '+' : ''}\n                  {opponentScore}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Rango:</span>\n                <span className='font-semibold text-gray-800'>\n                  {opponentRank}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>ELO:</span>\n                <div className='text-right'>\n                  <span className='font-semibold text-gray-800'>\n                    {opponentElo.current}\n                  </span>\n                  <span\n                    className={`ml-2 ${\n                      opponentElo.change >= 0\n                        ? 'text-emerald-600'\n                        : 'text-red-600'\n                    }`}\n                  >\n                    ({opponentElo.change > 0 ? '+' : ''}\n                    {opponentElo.change})\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='mt-8 text-center'>\n          <button\n            onClick={() => window.location.reload()}\n            className='bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors'\n          >\n            Volver a Jugar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/quizScreen.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Question } from './Question';\nimport { DuelHeader } from './DuelHeader';\nimport { DuelResults } from './DuelResults';\n// import { PowerUps } from './PowerUps';\n// import { StreakAlert } from './StreakAlert';\n\ninterface QuestionData {\n  id: string;\n  text: string;\n  answer: string;\n  options: string[];\n}\n\ninterface DuelResultsData {\n  is_draw: boolean;\n  player1_id: string;\n  player2_id: string;\n  player1_elo: {\n    change: number;\n    current: number;\n    previous: number;\n  };\n  player1_rank: string;\n  player1_score: number;\n  player2_elo: {\n    change: number;\n    current: number;\n    previous: number;\n  };\n  player2_rank: string;\n  player2_score: number;\n  winner_id: string;\n}\n\ninterface QuizScreenProps {\n  wsConnection: WebSocket | null;\n  playerId: string;\n  opponentId: string;\n}\n\nexport default function QuizScreen({\n  wsConnection,\n  playerId,\n  opponentId,\n}: QuizScreenProps) {\n  const [currentQuestion, setCurrentQuestion] = useState<QuestionData | null>(\n    null\n  );\n  const [isWaiting, setIsWaiting] = useState(true);\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [totalQuestions] = useState(5);\n  const [error, setError] = useState<string | null>(null);\n  const [duelResults, setDuelResults] = useState<DuelResultsData | null>(null);\n\n  useEffect(() => {\n    if (!wsConnection) return;\n\n    const handleMessage = (event: MessageEvent) => {\n      try {\n        console.log('Raw WebSocket message:', event.data);\n        console.log('Message type:', typeof event.data);\n\n        // Handle plain text messages\n        if (typeof event.data === 'string' && !event.data.startsWith('{')) {\n          console.log('Received text message:', event.data);\n          if (\n            event.data === '¡Oponente conectado! El duelo comenzará pronto.'\n          ) {\n            setIsWaiting(true);\n          }\n          return;\n        }\n\n        // Handle JSON messages\n        const data =\n          typeof event.data === 'string' ? JSON.parse(event.data) : event.data;\n        console.log('Parsed WebSocket message:', data);\n\n        if (data.type === 'question') {\n          setIsWaiting(false);\n          setCurrentQuestion(data.data);\n          setError(null);\n          // Update opponent progress when new question arrives\n          setOpponentProgress((prev) => Math.min(prev + 1, totalQuestions) - 1);\n        } else if (data.type === 'opponent_progress') {\n          console.log('Opponent progress update:', data.progress);\n          setOpponentProgress(data.progress);\n          // If opponent has finished all questions, show waiting message\n          if (data.progress >= totalQuestions) {\n            setError('Tu oponente ha terminado. Esperando tus respuestas...');\n          }\n        } else if (data.type === 'duel_end') {\n          console.log('Duel end message received:', data);\n          setDuelResults(data.data);\n          console.log('Duel results state set to:', data.data);\n        } else if (data.type === 'error') {\n          setError(data.message);\n        } else {\n          console.log('Unknown message type:', data.type);\n        }\n      } catch (err) {\n        console.error('Error parsing WebSocket message:', err);\n        console.error('Raw message that caused error:', event.data);\n        setError('Error al procesar el mensaje del servidor');\n      }\n    };\n\n    wsConnection.addEventListener('message', handleMessage);\n    return () => {\n      console.log('Cleaning up WebSocket connection');\n      wsConnection.removeEventListener('message', handleMessage);\n    };\n  }, [wsConnection, totalQuestions]);\n\n  const handleAnswerSelect = (selectedOption: string) => {\n    if (!wsConnection || !currentQuestion) return;\n\n    try {\n      wsConnection.send(\n        JSON.stringify({\n          type: 'answer',\n          questionId: currentQuestion.id,\n          answer: selectedOption,\n        })\n      );\n\n      setPlayerProgress((prev) => prev + 1);\n      setError(null);\n    } catch (err) {\n      console.error('Error sending answer:', err);\n      setError('Error al enviar la respuesta');\n    }\n  };\n\n  if (duelResults) {\n    console.log('Rendering duel results:', duelResults);\n    return (\n      <div className='min-h-screen'>\n        <DuelResults\n          results={duelResults}\n          playerId={playerId}\n          opponentId={opponentId}\n        />\n      </div>\n    );\n  }\n\n  if (isWaiting) {\n    return (\n      <div className='min-h-screen flex items-center justify-center'>\n        <div className='text-center'>\n          <div className='animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-emerald-500 mx-auto mb-4'></div>\n          <h2 className='text-xl font-semibold text-gray-700'>\n            Esperando al oponente...\n          </h2>\n          <p className='text-gray-500 mt-2'>\n            El duelo comenzará cuando ambos jugadores estén listos\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentQuestion) {\n    return (\n      <div className='min-h-screen flex items-center justify-center'>\n        <div className='text-center'>\n          <h2 className='text-xl font-semibold text-gray-700'>\n            Esperando la siguiente pregunta...\n          </h2>\n          {error && <p className='text-red-500 mt-2'>{error}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='min-h-screen flex flex-col'>\n      <main className='mx-auto px-4 py-6 flex-grow container'>\n        <div className='mx-auto max-w-3xl'>\n          {error && (\n            <div className='mb-4 p-4 bg-red-100 rounded-lg'>\n              <p className='text-red-700'>{error}</p>\n            </div>\n          )}\n\n          <DuelHeader\n            title='Duelo de Preguntas'\n            opponent={opponentId}\n            playerProgress={playerProgress}\n            opponentProgress={opponentProgress}\n            totalQuestions={totalQuestions}\n          />\n\n          <Question\n            key={currentQuestion.id}\n            questionNumber={playerProgress + 1}\n            totalQuestions={totalQuestions}\n            question={currentQuestion.text}\n            options={currentQuestion.options.map((option, index) => ({\n              letter: String.fromCharCode(65 + index),\n              text: option,\n            }))}\n            onAnswerSelect={handleAnswerSelect}\n          />\n\n          {/* <PowerUps />\n\n          <StreakAlert\n            streak={3}\n            message='¡Racha de 3 respuestas correctas! Próxima respuesta con puntos dobles.'\n          /> */}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/lib/duel-hooks-apollo.ts"],"sourcesContent":["'use client';\n\nimport { useMutation, useLazyQuery, gql } from '@apollo/client';\n\n// Queries\nconst GET_USER_BY_EMAIL_QUERY = gql`\n  query GetUserByEmail($email: String!) {\n    getUserByEmail(email: $email) {\n      id\n      username\n      email\n      fullName\n      avatar\n      role\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\n// Mutations\nconst REQUEST_DUEL_MUTATION = gql`\n  mutation RequestDuel($input: RequestDuelInput!) {\n    requestDuel(input: $input) {\n      duelId\n      message\n    }\n  }\n`;\n\nconst ACCEPT_DUEL_MUTATION = gql`\n  mutation AcceptDuel($input: AcceptDuelInput!) {\n    acceptDuel(input: $input) {\n      duelId\n      message\n    }\n  }\n`;\n\n// Hook para buscar usuario por email\nexport function useSearchUserByEmail() {\n  const [searchUser, { loading, error, data }] = useLazyQuery(\n    GET_USER_BY_EMAIL_QUERY,\n    {\n      errorPolicy: 'all',\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const searchUserByEmail = async (email: string) => {\n    try {\n      const { data: result } = await searchUser({\n        variables: { email },\n      });\n\n      return result?.getUserByEmail || null;\n    } catch (err) {\n      console.error('Error searching user by email:', err);\n      throw err;\n    }\n  };\n\n  return {\n    searchUserByEmail,\n    loading,\n    error: error?.message || null,\n    user: data?.getUserByEmail || null,\n  };\n}\n\n// Hook para solicitar duelo\nexport function useRequestDuel() {\n  const [requestDuelMutation, { loading, error }] = useMutation(\n    REQUEST_DUEL_MUTATION,\n    {\n      errorPolicy: 'all',\n    }\n  );\n\n  const requestDuel = async (requesterId: string, opponentId: string) => {\n    try {\n      const { data } = await requestDuelMutation({\n        variables: {\n          input: {\n            requesterId,\n            opponentId,\n          },\n        },\n      });\n\n      return data.requestDuel;\n    } catch (err) {\n      console.error('Error requesting duel:', err);\n      throw err;\n    }\n  };\n\n  return { requestDuel, loading, error: error?.message || null };\n}\n\n// Hook para aceptar duelo\nexport function useAcceptDuel() {\n  const [acceptDuelMutation, { loading, error }] = useMutation(\n    ACCEPT_DUEL_MUTATION,\n    {\n      errorPolicy: 'all',\n    }\n  );\n\n  const acceptDuel = async (duelId: string) => {\n    try {\n      const { data } = await acceptDuelMutation({\n        variables: {\n          input: { duelId },\n        },\n      });\n\n      return data.acceptDuel;\n    } catch (err) {\n      console.error('Error accepting duel:', err);\n      throw err;\n    }\n  };\n\n  return { acceptDuel, loading, error: error?.message || null };\n}\n\n// Hook combinado para gestión de duelos\nexport function useDuels() {\n  const {\n    searchUserByEmail,\n    loading: searchLoading,\n    error: searchError,\n    user: foundUser,\n  } = useSearchUserByEmail();\n\n  const {\n    requestDuel,\n    loading: requestLoading,\n    error: requestError,\n  } = useRequestDuel();\n\n  const {\n    acceptDuel,\n    loading: acceptLoading,\n    error: acceptError,\n  } = useAcceptDuel();\n\n  return {\n    // Search functionality\n    searchUserByEmail,\n    foundUser,\n    searchLoading,\n    searchError,\n\n    // Duel request functionality\n    requestDuel,\n    requestLoading,\n    requestError,\n\n    // Duel accept functionality\n    acceptDuel,\n    acceptLoading,\n    acceptError,\n\n    // Combined loading states\n    isLoading: searchLoading || requestLoading || acceptLoading,\n    error: searchError || requestError || acceptError,\n  };\n}\n"],"names":[],"mappings":";;;;;;AAEA;AAAA;AAAA;;AAFA;;AAIA,UAAU;AACV,MAAM,0BAA0B,iJAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;AAapC,CAAC;AAED,YAAY;AACZ,MAAM,wBAAwB,iJAAA,CAAA,MAAG,CAAC;;;;;;;AAOlC,CAAC;AAED,MAAM,uBAAuB,iJAAA,CAAA,MAAG,CAAC;;;;;;;AAOjC,CAAC;AAGM,SAAS;;IACd,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,GAAG,CAAA,GAAA,uKAAA,CAAA,eAAY,AAAD,EACxD,yBACA;QACE,aAAa;QACb,aAAa;IACf;IAGF,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,MAAM,EAAE,MAAM,MAAM,EAAE,GAAG,MAAM,WAAW;gBACxC,WAAW;oBAAE;gBAAM;YACrB;YAEA,OAAO,QAAQ,kBAAkB;QACnC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR;IACF;IAEA,OAAO;QACL;QACA;QACA,OAAO,OAAO,WAAW;QACzB,MAAM,MAAM,kBAAkB;IAChC;AACF;GA5BgB;;QACiC,uKAAA,CAAA,eAAY;;;AA8BtD,SAAS;;IACd,MAAM,CAAC,qBAAqB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,EAC1D,uBACA;QACE,aAAa;IACf;IAGF,MAAM,cAAc,OAAO,aAAqB;QAC9C,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,oBAAoB;gBACzC,WAAW;oBACT,OAAO;wBACL;wBACA;oBACF;gBACF;YACF;YAEA,OAAO,KAAK,WAAW;QACzB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACR;IACF;IAEA,OAAO;QAAE;QAAa;QAAS,OAAO,OAAO,WAAW;IAAK;AAC/D;IA3BgB;;QACoC,sKAAA,CAAA,cAAW;;;AA6BxD,SAAS;;IACd,MAAM,CAAC,oBAAoB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,EACzD,sBACA;QACE,aAAa;IACf;IAGF,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mBAAmB;gBACxC,WAAW;oBACT,OAAO;wBAAE;oBAAO;gBAClB;YACF;YAEA,OAAO,KAAK,UAAU;QACxB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,OAAO;QAAE;QAAY;QAAS,OAAO,OAAO,WAAW;IAAK;AAC9D;IAxBgB;;QACmC,sKAAA,CAAA,cAAW;;;AA0BvD,SAAS;;IACd,MAAM,EACJ,iBAAiB,EACjB,SAAS,aAAa,EACtB,OAAO,WAAW,EAClB,MAAM,SAAS,EAChB,GAAG;IAEJ,MAAM,EACJ,WAAW,EACX,SAAS,cAAc,EACvB,OAAO,YAAY,EACpB,GAAG;IAEJ,MAAM,EACJ,UAAU,EACV,SAAS,aAAa,EACtB,OAAO,WAAW,EACnB,GAAG;IAEJ,OAAO;QACL,uBAAuB;QACvB;QACA;QACA;QACA;QAEA,6BAA6B;QAC7B;QACA;QACA;QAEA,4BAA4B;QAC5B;QACA;QACA;QAEA,0BAA0B;QAC1B,WAAW,iBAAiB,kBAAkB;QAC9C,OAAO,eAAe,gBAAgB;IACxC;AACF;IAzCgB;;QAMV;QAMA;QAMA","debugId":null}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/components/Button.tsx"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport Link from 'next/link';\nimport clsx from 'clsx';\n\ntype ButtonVariant = 'primary' | 'secondary';\n\ninterface ButtonProps {\n  children: React.ReactNode;\n  variant?: ButtonVariant;\n  href?: string;\n  onClick?: () => void;\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n  disabled?: boolean;\n}\n\nexport const Button = ({\n  children,\n  variant = 'primary',\n  href,\n  onClick,\n  className = '',\n  type = 'button',\n  disabled = false,\n}: ButtonProps) => {\n  const baseClasses = `items-center justify-center px-8 py-3 text-base font-medium rounded-md inline-flex \n    transition-all duration-300 ease-in-out transform \n    hover:scale-105 hover:shadow-lg active:scale-95 active:opacity-80 \n    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 \n    disabled:opacity-50 disabled:cursor-not-allowed \n    relative z-10 hover:cursor-pointer`;\n\n  const variantClasses = {\n    primary: `text-white bg-emerald-600 border border-transparent \n      hover:bg-emerald-700 hover:shadow-lg active:bg-emerald-500`,\n    secondary: `text-emerald-600 bg-white border border-emerald-600 \n      hover:bg-emerald-50 hover:shadow-sm active:bg-emerald-100`,\n  };\n\n  const buttonClasses = clsx(\n    baseClasses,\n    variantClasses[variant],\n    className,\n    disabled && 'opacity-50 cursor-not-allowed'\n  );\n\n  if (href) {\n    return (\n      <Link href={href} className={buttonClasses}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAiBO,MAAM,SAAS,CAAC,EACrB,QAAQ,EACR,UAAU,SAAS,EACnB,IAAI,EACJ,OAAO,EACP,YAAY,EAAE,EACd,OAAO,QAAQ,EACf,WAAW,KAAK,EACJ;IACZ,MAAM,cAAc,CAAC;;;;;sCAKe,CAAC;IAErC,MAAM,iBAAiB;QACrB,SAAS,CAAC;gEACkD,CAAC;QAC7D,WAAW,CAAC;+DAC+C,CAAC;IAC9D;IAEA,MAAM,gBAAgB,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACvB,aACA,cAAc,CAAC,QAAQ,EACvB,WACA,YAAY;IAGd,IAAI,MAAM;QACR,qBACE,6LAAC,+JAAA,CAAA,UAAI;YAAC,MAAM;YAAM,WAAW;sBAC1B;;;;;;IAGP;IAEA,qBACE,6LAAC;QACC,MAAM;QACN,WAAW;QACX,SAAS;QACT,UAAU;kBAET;;;;;;AAGP;KAhDa;uCAkDE","debugId":null}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/components/ProtectedRoute.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuthApollo } from '@/lib/auth-context-apollo';\nimport LoadingSpinner from './LoadingSpinner';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: 'STUDENT' | 'TEACHER' | 'ADMIN';\n}\n\nexport default function ProtectedRoute({\n  children,\n  requiredRole,\n}: ProtectedRouteProps) {\n  const router = useRouter();\n  const { user, isLoading, isAuthenticated, isInitialized } = useAuthApollo();\n\n  useEffect(() => {\n    // Solo verificar cuando se haya inicializado\n    if (!isInitialized) return;\n\n    const checkAuth = async () => {\n      console.log('🔒 ProtectedRoute: Checking authentication with Apollo');\n\n      if (!isAuthenticated || !user) {\n        console.log(\n          '❌ ProtectedRoute: User not authenticated, redirecting to login'\n        );\n        const currentPath = window.location.pathname;\n        router.push(`/login?from=${encodeURIComponent(currentPath)}`);\n        return;\n      }\n\n      if (requiredRole && user.role !== requiredRole) {\n        console.log(\n          `🚫 ProtectedRoute: User role ${user.role} doesn't match required role ${requiredRole}`\n        );\n        router.push('/dashboard');\n        return;\n      }\n\n      console.log('✅ ProtectedRoute: Authentication check passed');\n    };\n\n    checkAuth();\n  }, [isInitialized, isAuthenticated, user, router, requiredRole]);\n\n  // Mostrar loading mientras se inicializa o está cargando\n  if (!isInitialized || isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  // Si no está autenticado, no mostrar nada (se redirigirá)\n  if (!isAuthenticated || !user) {\n    return null;\n  }\n\n  // Si requiere un rol específico y no lo tiene, no mostrar nada\n  if (requiredRole && user.role !== requiredRole) {\n    return null;\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAOe,SAAS,eAAe,EACrC,QAAQ,EACR,YAAY,EACQ;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,gBAAa,AAAD;IAExE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,6CAA6C;YAC7C,IAAI,CAAC,eAAe;YAEpB,MAAM;sDAAY;oBAChB,QAAQ,GAAG,CAAC;oBAEZ,IAAI,CAAC,mBAAmB,CAAC,MAAM;wBAC7B,QAAQ,GAAG,CACT;wBAEF,MAAM,cAAc,OAAO,QAAQ,CAAC,QAAQ;wBAC5C,OAAO,IAAI,CAAC,CAAC,YAAY,EAAE,mBAAmB,cAAc;wBAC5D;oBACF;oBAEA,IAAI,gBAAgB,KAAK,IAAI,KAAK,cAAc;wBAC9C,QAAQ,GAAG,CACT,CAAC,6BAA6B,EAAE,KAAK,IAAI,CAAC,6BAA6B,EAAE,cAAc;wBAEzF,OAAO,IAAI,CAAC;wBACZ;oBACF;oBAEA,QAAQ,GAAG,CAAC;gBACd;;YAEA;QACF;mCAAG;QAAC;QAAe;QAAiB;QAAM;QAAQ;KAAa;IAE/D,yDAAyD;IACzD,IAAI,CAAC,iBAAiB,WAAW;QAC/B,qBAAO,6LAAC,gIAAA,CAAA,UAAc;;;;;IACxB;IAEA,0DAA0D;IAC1D,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,OAAO;IACT;IAEA,+DAA+D;IAC/D,IAAI,gBAAgB,KAAK,IAAI,KAAK,cAAc;QAC9C,OAAO;IACT;IAEA,qBAAO;kBAAG;;AACZ;GArDwB;;QAIP,qIAAA,CAAA,YAAS;QACoC,oIAAA,CAAA,gBAAa;;;KALnD","debugId":null}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { RequestDuelResponse } from \"../types/duel\";\nimport QuizScreen from \"./components/quizScreen\";\nimport { useAuthApollo } from \"@/lib/auth-context-apollo\";\nimport { useDuels } from \"@/lib/duel-hooks-apollo\";\nimport Button from \"@/components/Button\";\nimport { TrophyIcon } from \"@heroicons/react/24/outline\";\nimport Image from \"next/image\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\n\nfunction DuelosContent() {\n  const { user } = useAuthApollo();\n  const {\n    searchUserByEmail,\n    foundUser,\n    searchLoading,\n    searchError,\n    requestDuel,\n    requestLoading,\n    requestError,\n    acceptDuel,\n    acceptLoading,\n    acceptError,\n    error: apolloError,\n  } = useDuels();\n\n  const [duelResponse, setDuelResponse] = useState<RequestDuelResponse | null>(\n    null\n  );\n  const [error, setError] = useState<string | null>(null);\n  const [wsConnection, setWsConnection] = useState<WebSocket | null>(null);\n  const [notificationWs, setNotificationWs] = useState<WebSocket | null>(null);\n  const [showQuiz, setShowQuiz] = useState(false);\n  const [formData, setFormData] = useState({\n    duelId: \"\",\n    playerId: user?.id || \"\",\n  });\n  const [opponentEmail, setOpponentEmail] = useState(\"\");\n  const [pendingChallenges, setPendingChallenges] = useState<\n    Array<{\n      duelId: string;\n      requesterId: string;\n      requesterName: string;\n      timestamp: string;\n    }>\n  >([]);\n\n  // Set combined error state\n  useEffect(() => {\n    const combinedError =\n      apolloError || searchError || requestError || acceptError;\n    setError(combinedError);\n  }, [apolloError, searchError, requestError, acceptError]);\n\n  useEffect(() => {\n    if (user?.id) {\n      console.log(\"User data loaded:\", user);\n      console.log(\"Setting playerId to:\", user.id);\n      setFormData((prev) => ({\n        ...prev,\n        playerId: user.id,\n      }));\n    } else {\n      console.log(\"User data not available or missing ID:\", user);\n    }\n  }, [user]);\n\n  // Establecer la conexión WebSocket para notificaciones de duelos al cargar la página\n  useEffect(() => {\n    let localWs: WebSocket | null = null;\n    let connectionAttempts = 0;\n    let errorGracePeriod = true;\n    let reconnectTimeoutId: NodeJS.Timeout | null = null;\n    let isComponentMounted = true;\n\n    // Set a timer to disable the grace period after 5 seconds\n    const gracePeriodTimer = setTimeout(() => {\n      errorGracePeriod = false;\n    }, 5000);\n\n    if (user?.id && !notificationWs) {\n      console.log(\n        `Attempting to connect to notifications WebSocket for user ${user.id}...`\n      );\n\n      const connectWebSocket = () => {\n        // No intentar conectar si el componente ya no está montado\n        if (!isComponentMounted) return;\n\n        connectionAttempts++;\n        const wsUrl = `ws://localhost:8002/ws/notifications/${user.id}`;\n        console.log(\n          `Connecting to WebSocket URL: ${wsUrl} (attempt ${connectionAttempts})`\n        );\n\n        try {\n          localWs = new WebSocket(wsUrl);\n\n          localWs.onopen = () => {\n            if (!isComponentMounted) {\n              localWs?.close();\n              return;\n            }\n\n            console.log(\n              \"Notification WebSocket connection established successfully\"\n            );\n            setError(null);\n            connectionAttempts = 0;\n            setNotificationWs(localWs);\n          };\n\n          localWs.onmessage = (event) => {\n            if (!isComponentMounted) return;\n\n            try {\n              console.log(\"WebSocket message received:\", event.data);\n              const data = JSON.parse(event.data);\n\n              if (data.type === \"duel_request\") {\n                console.log(\"Duel request notification received:\", data);\n                setPendingChallenges((prev) => [\n                  ...prev,\n                  {\n                    duelId: data.duelId,\n                    requesterId: data.requesterId,\n                    requesterName: data.requesterName,\n                    timestamp: new Date().toISOString(),\n                  },\n                ]);\n              } else if (data.type === \"welcome\") {\n                console.log(\"Welcome message received:\", data);\n              }\n            } catch (error) {\n              console.error(\"Error parsing WebSocket message:\", error);\n            }\n          };\n\n          localWs.onerror = (error) => {\n            if (!isComponentMounted) return;\n\n            console.error(\"Notification WebSocket error:\", error);\n\n            if (!errorGracePeriod && connectionAttempts > 2) {\n              setError(\"Error de conexión con el servidor. Reintentando...\");\n              console.log(\n                \"WebSocket connection failed. Will retry in 5 seconds...\"\n              );\n            }\n          };\n\n          localWs.onclose = (event) => {\n            if (!isComponentMounted) return;\n\n            console.log(\n              `Notification WebSocket connection closed. Code: ${event.code}, Reason: ${event.reason}`\n            );\n\n            // Limpiar la referencia del WebSocket en el estado\n            setNotificationWs(null);\n\n            // Solo reconectar si es un cierre inesperado y no hemos intentado demasiadas veces\n            if (\n              event.code !== 1000 &&\n              connectionAttempts < 5 &&\n              isComponentMounted\n            ) {\n              reconnectTimeoutId = setTimeout(() => {\n                if (isComponentMounted && user?.id) {\n                  console.log(\"Attempting to reconnect WebSocket...\");\n                  connectWebSocket();\n                }\n              }, 5000); // Aumentado a 5 segundos para ser menos agresivo\n            } else if (connectionAttempts >= 5) {\n              console.log(\n                \"Max reconnection attempts reached. Stopping reconnection.\"\n              );\n              setError(\n                \"No se pudo establecer conexión con el servidor de notificaciones.\"\n              );\n            }\n          };\n        } catch (error) {\n          console.error(\"Error creating WebSocket:\", error);\n          if (!errorGracePeriod && isComponentMounted) {\n            setError(\"Error al crear conexión WebSocket\");\n          }\n        }\n      };\n\n      connectWebSocket();\n\n      // Cleanup function for this specific effect\n      return () => {\n        isComponentMounted = false;\n        clearTimeout(gracePeriodTimer);\n        if (reconnectTimeoutId) {\n          clearTimeout(reconnectTimeoutId);\n        }\n\n        console.log(\"Component unmounting, cleaning up WebSocket connection\");\n        try {\n          if (localWs && localWs.readyState === WebSocket.OPEN) {\n            localWs.close(1000, \"Component unmounting\"); // Normal closure\n          }\n        } catch (error) {\n          console.error(\"Error closing WebSocket:\", error);\n        }\n      };\n    }\n  }, [user?.id]); // Solo depender de user?.id, no de notificationWs\n\n  // Limpiar la conexión WebSocket cuando el componente se desmonte\n  useEffect(() => {\n    return () => {\n      if (wsConnection) {\n        wsConnection.close();\n      }\n    };\n  }, [wsConnection]);\n\n  const handleSearchOpponent = async () => {\n    if (!opponentEmail) {\n      setError(\"Por favor, ingresa el correo del oponente\");\n      return;\n    }\n\n    try {\n      const foundUser = await searchUserByEmail(opponentEmail);\n      if (!foundUser) {\n        setError(\"No se encontró ningún usuario con ese correo\");\n      } else {\n        setError(null);\n      }\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"Error al buscar el usuario\"\n      );\n    }\n  };\n\n  const handleRequestDuel = async () => {\n    console.log(\"Current user state:\", user);\n    console.log(\"User ID:\", user?.id);\n\n    // Check if user exists but ID is missing\n    if (user && !user.id) {\n      console.log(\n        \"User exists but ID is missing. Full user object:\",\n        JSON.stringify(user)\n      );\n\n      // Check if the ID might be under a different property name\n      const possibleIdFields = [\"_id\", \"userId\", \"uid\", \"userID\"];\n      let alternativeId = null;\n\n      for (const field of possibleIdFields) {\n        // Use Record to avoid TypeScript errors\n        const userRecord = user as Record<string, unknown>;\n        if (userRecord[field]) {\n          console.log(\n            `Found alternative ID field: ${field} with value: ${String(\n              userRecord[field]\n            )}`\n          );\n          alternativeId = String(userRecord[field]);\n          break;\n        }\n      }\n\n      if (alternativeId && foundUser) {\n        // Use the alternative ID if found\n        try {\n          const response = await requestDuel(alternativeId, foundUser.id);\n          setDuelResponse(response);\n          setError(null);\n\n          // Rest of the successful duel request handling...\n          setFormData((prev) => ({\n            ...prev,\n            duelId: response.duelId,\n          }));\n\n          if (response.duelId) {\n            // Establish WebSocket connection...\n            if (wsConnection) {\n              wsConnection.close();\n            }\n\n            const ws = new WebSocket(\n              `ws://localhost:8002/ws/duels/${response.duelId}/${alternativeId}`\n            );\n\n            ws.onopen = () => {\n              setError(null);\n              setShowQuiz(true);\n            };\n\n            ws.onerror = (error) => {\n              setError(\"Error en la conexión WebSocket\");\n              console.error(\"WebSocket error:\", error);\n            };\n\n            ws.onclose = () => {\n              if (error) {\n                setShowQuiz(false);\n              }\n            };\n\n            setWsConnection(ws);\n          }\n        } catch (err) {\n          setError(\n            err instanceof Error ? err.message : \"Error al solicitar el duelo\"\n          );\n          setDuelResponse(null);\n        }\n        return;\n      }\n\n      setError(\n        \"Tu sesión existe pero falta el ID de usuario. Intenta cerrar sesión y volver a iniciar.\"\n      );\n      return;\n    }\n\n    // Original check\n    if (!user?.id) {\n      setError(\"Debes iniciar sesión para solicitar un duelo\");\n      return;\n    }\n\n    if (!foundUser) {\n      setError(\"Debes buscar y seleccionar un oponente primero\");\n      return;\n    }\n\n    try {\n      // Ensure we have a valid ID, use an explicit string to avoid type issues\n      const requesterId = String(user.id);\n\n      const response = await requestDuel(requesterId, foundUser.id);\n      setDuelResponse(response);\n      setError(null);\n\n      // Establecer el ID del duelo en el formData\n      setFormData((prev) => ({\n        ...prev,\n        duelId: response.duelId,\n      }));\n\n      // Establecer la conexión WebSocket inmediatamente después de una solicitud exitosa\n      if (response.duelId && user?.id) {\n        // Cerrar conexión existente si hay una\n        if (wsConnection) {\n          wsConnection.close();\n        }\n\n        // Crear nueva conexión WebSocket\n        const ws = new WebSocket(\n          `ws://localhost:8002/ws/duels/${response.duelId}/${user.id}`\n        );\n\n        ws.onopen = () => {\n          setError(null);\n          setShowQuiz(true);\n        };\n\n        ws.onerror = (error) => {\n          setError(\"Error en la conexión WebSocket\");\n          console.error(\"WebSocket error:\", error);\n        };\n\n        ws.onclose = () => {\n          if (error) {\n            setShowQuiz(false);\n          }\n        };\n\n        setWsConnection(ws);\n      }\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"Error al solicitar el duelo\"\n      );\n      setDuelResponse(null);\n    }\n  };\n\n  const handleChallengeAccept = (duelId: string) => {\n    // Auto-accept the challenge\n    handleAcceptDuel(duelId);\n\n    // Remove from pending challenges\n    setPendingChallenges((prev) =>\n      prev.filter((challenge) => challenge.duelId !== duelId)\n    );\n  };\n\n  const handleChallengeReject = (duelId: string) => {\n    // Remove from pending challenges\n    setPendingChallenges((prev) =>\n      prev.filter((challenge) => challenge.duelId !== duelId)\n    );\n  };\n\n  const handleAcceptDuel = async (duelId: string) => {\n    if (!duelId) {\n      setError(\"Por favor, ingresa el ID del duelo\");\n      return;\n    }\n\n    try {\n      const response = await acceptDuel(duelId);\n      setDuelResponse(response);\n      setError(null);\n\n      // Establecer el ID del duelo en el formData\n      setFormData((prev) => ({\n        ...prev,\n        duelId: duelId,\n      }));\n\n      // Establecer la conexión WebSocket inmediatamente después de aceptar\n      if (duelId && user?.id) {\n        // Cerrar conexión existente si hay una\n        if (wsConnection) {\n          wsConnection.close();\n        }\n\n        // Crear nueva conexión WebSocket\n        const ws = new WebSocket(\n          `ws://localhost:8002/ws/duels/${duelId}/${user.id}`\n        );\n\n        ws.onopen = () => {\n          setError(null);\n          setShowQuiz(true);\n        };\n\n        ws.onerror = (error) => {\n          setError(\"Error en la conexión WebSocket\");\n          console.error(\"WebSocket error:\", error);\n        };\n\n        ws.onclose = () => {\n          if (error) {\n            setShowQuiz(false);\n          }\n        };\n\n        setWsConnection(ws);\n      }\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"Error al aceptar el duelo\"\n      );\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      {!showQuiz ? (\n        <div className=\"mx-auto px-4 py-8 container\">\n          <p className=\"text-3xl font-bold text-emerald-700 mb-6 text-center flex items-center justify-center gap-2\">\n            <TrophyIcon className=\"w-8 h-8\" />\n            Duelos Académicos\n          </p>\n          <div className=\"lg:flex-row flex flex-col gap-8\">\n            <div className=\"lg:w-1/2 bg-gradient-to-br rounded-xl shadow-xl from-emerald-500 to-emerald-700 overflow-hidden\">\n              <div className=\"flex flex-col\">\n                <div className=\"items-center justify-center p-6 flex\">\n                  <Image\n                    src=\"/images/duels.webp\"\n                    alt=\"Duelo\"\n                    width={300}\n                    height={400}\n                    className=\"object-cover transform hover:scale-105 transition duration-300 rounded-lg h-64\"\n                  />\n                </div>\n                <div className=\"text-white p-6\">\n                  <p className=\"text-2xl font-bold mb-4\">\n                    ¡Desafía a tus compañeros!\n                  </p>\n                  <p className=\"mb-4\">\n                    Pon a prueba tus conocimientos y demuestra quién es el mejor\n                    en tu clase. Gana monedas, experiencia y desbloquea logros\n                    especiales.\n                  </p>\n                  <div className=\"bg-white/20 rounded-lg mb-4 backdrop-blur-sm p-4\">\n                    <p className=\"font-bold text-xl mb-2\">\n                      Beneficios de los Duelos\n                    </p>\n                    <ul className=\"list-disc list-inside space-y-1\">\n                      <li>Gana hasta 50 monedas por victoria</li>\n                      <li>Sube en el ranking de tu clase</li>\n                      <li>Desbloquea insignias exclusivas</li>\n                      <li>Refuerza tu aprendizaje mientras juegas</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"lg:w-1/2 bg-white rounded-xl shadow-lg border border-emerald-100 p-6 flex flex-col justify-center\">\n              <div className=\"items-center mb-6 flex\">\n                <div className=\"bg-emerald-100 rounded-full mr-3 p-2\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-6 w-6 text-emerald-600\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"\n                    ></path>\n                  </svg>\n                </div>\n                <p className=\"text-2xl font-bold text-gray-800\">\n                  Desafiar a un Estudiante\n                </p>\n              </div>\n              <form\n                className=\"space-y-6\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  handleSearchOpponent();\n                }}\n              >\n                <div>\n                  <label\n                    htmlFor=\"opponentEmail\"\n                    className=\"text-sm font-medium text-gray-700 mb-1 block\"\n                  >\n                    Correo del estudiante\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"pl-3 items-center absolute inset-y-0 left-0 flex pointer-events-none\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 text-gray-400\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n                        ></path>\n                      </svg>\n                    </div>\n                    <input\n                      name=\"opponentEmail\"\n                      type=\"email\"\n                      value={opponentEmail}\n                      onChange={(e) => setOpponentEmail(e.target.value)}\n                      placeholder=\"estudiante@universidad.edu\"\n                      className=\"border border-gray-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition pl-10 w-full py-3 rounded-lg\"\n                      id=\"opponentEmail\"\n                    />\n                  </div>\n                </div>\n                <div className=\"pt-2\">\n                  <Button\n                    type=\"submit\"\n                    disabled={searchLoading}\n                    className=\"hover:bg-emerald-700 transition duration-300 hover:shadow-lg transform hover:-translate-y-1 w-full bg-emerald-600 text-white font-bold py-3 rounded-lg shadow-md\"\n                  >\n                    {searchLoading ? \"Buscando...\" : \"Buscar Estudiante\"}\n                  </Button>\n                </div>\n              </form>\n\n              {foundUser && (\n                <div className=\"mt-6 p-4 bg-emerald-50 rounded-lg\">\n                  <h3 className=\"font-bold text-emerald-800 mb-2\">\n                    Oponente Encontrado:\n                  </h3>\n                  <p className=\"text-gray-700\">\n                    Nombre: {foundUser.fullName || foundUser.username}\n                  </p>\n                  <p className=\"text-gray-700\">Correo: {foundUser.email}</p>\n                  <p className=\"text-gray-700\">Rol: {foundUser.role}</p>\n                  <Button\n                    onClick={handleRequestDuel}\n                    disabled={requestLoading}\n                    className=\"mt-4 hover:bg-emerald-700 transition duration-300 hover:shadow-lg transform hover:-translate-y-1 w-full bg-emerald-600 text-white font-bold py-3 rounded-lg shadow-md\"\n                  >\n                    {requestLoading ? \"Solicitando...\" : \"Solicitar Duelo\"}\n                  </Button>\n                </div>\n              )}\n\n              {duelResponse && (\n                <div className=\"mt-6 p-4 bg-emerald-50 rounded-lg\">\n                  <h3 className=\"font-bold text-emerald-800 mb-2\">\n                    Duelo Solicitado:\n                  </h3>\n                  <p className=\"text-gray-700\">\n                    ID del Duelo: {duelResponse.duelId}\n                  </p>\n                  <p className=\"text-gray-700\">\n                    Mensaje: {duelResponse.message}\n                  </p>\n                </div>\n              )}\n\n              {pendingChallenges.length > 0 && (\n                <div className=\"mt-6 pt-4 border-t border-gray-200\">\n                  <p className=\"font-semibold text-gray-700 mb-2\">\n                    Desafíos Pendientes\n                  </p>\n                  <div className=\"space-y-3\">\n                    {pendingChallenges.map((challenge) => (\n                      <div\n                        key={challenge.duelId}\n                        className=\"justify-between items-center bg-emerald-50 rounded-lg flex p-3\"\n                      >\n                        <div className=\"items-center flex\">\n                          <div>\n                            <p className=\"font-medium text-gray-800\">\n                              ¡Desafío recibido!\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                              ID: {challenge.duelId}\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                              Recibido:{\" \"}\n                              {new Date(challenge.timestamp).toLocaleString()}\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                          <button\n                            onClick={() =>\n                              handleChallengeAccept(challenge.duelId)\n                            }\n                            disabled={acceptLoading}\n                            className=\"hover:bg-emerald-600 bg-emerald-500 text-white px-3 py-1 rounded-md text-sm disabled:opacity-50\"\n                          >\n                            {acceptLoading ? \"Aceptando...\" : \"Aceptar\"}\n                          </button>\n                          <button\n                            onClick={() =>\n                              handleChallengeReject(challenge.duelId)\n                            }\n                            className=\"hover:bg-gray-300 bg-gray-200 text-gray-700 px-3 py-1 rounded-md text-sm\"\n                          >\n                            Rechazar\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {error && (\n                <div className=\"mt-6 p-4 bg-red-50 rounded-lg\">\n                  <h3 className=\"font-bold text-red-700 mb-2\">Error:</h3>\n                  <p className=\"text-red-600\">{error}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <QuizScreen\n          wsConnection={wsConnection}\n          playerId={formData.playerId}\n          opponentId={foundUser?.id || \"user_002\"}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default function Duelos() {\n  return (\n    <ProtectedRoute>\n      <DuelosContent />\n    </ProtectedRoute>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}