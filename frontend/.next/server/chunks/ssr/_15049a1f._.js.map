{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/components/ProtectedRoute.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuthApollo } from '@/lib/auth-context-apollo';\nimport LoadingSpinner from './LoadingSpinner';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: 'STUDENT' | 'TEACHER' | 'ADMIN';\n}\n\nexport default function ProtectedRoute({\n  children,\n  requiredRole,\n}: ProtectedRouteProps) {\n  const router = useRouter();\n  const { user, isLoading, isAuthenticated, isInitialized } = useAuthApollo();\n\n  useEffect(() => {\n    // Solo verificar cuando se haya inicializado\n    if (!isInitialized) return;\n\n    const checkAuth = async () => {\n      console.log('üîí ProtectedRoute: Checking authentication with Apollo');\n\n      if (!isAuthenticated || !user) {\n        console.log(\n          '‚ùå ProtectedRoute: User not authenticated, redirecting to login'\n        );\n        const currentPath = window.location.pathname;\n        router.push(`/login?from=${encodeURIComponent(currentPath)}`);\n        return;\n      }\n\n      if (requiredRole && user.role !== requiredRole) {\n        console.log(\n          `üö´ ProtectedRoute: User role ${user.role} doesn't match required role ${requiredRole}`\n        );\n        router.push('/dashboard');\n        return;\n      }\n\n      console.log('‚úÖ ProtectedRoute: Authentication check passed');\n    };\n\n    checkAuth();\n  }, [isInitialized, isAuthenticated, user, router, requiredRole]);\n\n  // Mostrar loading mientras se inicializa o est√° cargando\n  if (!isInitialized || isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  // Si no est√° autenticado, no mostrar nada (se redirigir√°)\n  if (!isAuthenticated || !user) {\n    return null;\n  }\n\n  // Si requiere un rol espec√≠fico y no lo tiene, no mostrar nada\n  if (requiredRole && user.role !== requiredRole) {\n    return null;\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAOe,SAAS,eAAe,EACrC,QAAQ,EACR,YAAY,EACQ;IACpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD;IAExE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,6CAA6C;QAC7C,IAAI,CAAC,eAAe;QAEpB,MAAM,YAAY;YAChB,QAAQ,GAAG,CAAC;YAEZ,IAAI,CAAC,mBAAmB,CAAC,MAAM;gBAC7B,QAAQ,GAAG,CACT;gBAEF,MAAM,cAAc,OAAO,QAAQ,CAAC,QAAQ;gBAC5C,OAAO,IAAI,CAAC,CAAC,YAAY,EAAE,mBAAmB,cAAc;gBAC5D;YACF;YAEA,IAAI,gBAAgB,KAAK,IAAI,KAAK,cAAc;gBAC9C,QAAQ,GAAG,CACT,CAAC,6BAA6B,EAAE,KAAK,IAAI,CAAC,6BAA6B,EAAE,cAAc;gBAEzF,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,QAAQ,GAAG,CAAC;QACd;QAEA;IACF,GAAG;QAAC;QAAe;QAAiB;QAAM;QAAQ;KAAa;IAE/D,yDAAyD;IACzD,IAAI,CAAC,iBAAiB,WAAW;QAC/B,qBAAO,8OAAC,6HAAA,CAAA,UAAc;;;;;IACxB;IAEA,0DAA0D;IAC1D,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,OAAO;IACT;IAEA,+DAA+D;IAC/D,IAAI,gBAAgB,KAAK,IAAI,KAAK,cAAc;QAC9C,OAAO;IACT;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/Question.tsx"],"sourcesContent":["import { useState } from 'react';\n\ninterface Option {\n  letter: string;\n  text: string;\n}\n\ninterface QuestionProps {\n  questionNumber: number;\n  totalQuestions: number;\n  // points: number;\n  question: string;\n  options: Option[];\n  onAnswerSelect: (answer: string) => void;\n}\n\nexport function Question({\n  questionNumber,\n  totalQuestions,\n  // points,\n  question,\n  options,\n  onAnswerSelect,\n}: QuestionProps) {\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n\n  const handleAnswerSelect = (letter: string, text: string) => {\n    if (selectedAnswer === null) {\n      setSelectedAnswer(letter);\n      onAnswerSelect(text);\n    }\n  };\n\n  return (\n    <div className='bg-white rounded-xl shadow-lg mb-6 p-6 border-2 border-emerald-300'>\n      <div className='justify-between mb-3 flex'>\n        <span className='bg-emerald-600 text-white px-4 py-1 rounded-full text-sm font-semibold'>\n          Pregunta {questionNumber} de {totalQuestions}\n        </span>\n        {/* <span className='bg-emerald-100 text-emerald-800 px-4 py-1 rounded-full text-sm font-semibold'>\n          +{points} puntos\n        </span> */}\n      </div>\n      <p className='text-xl md:text-2xl font-bold text-gray-800 mb-6'>\n        {question}\n      </p>\n      <div className='md:grid-cols-2 grid grid-cols-1 gap-4'>\n        {options.map((option) => (\n          <button\n            key={option.letter}\n            type='button'\n            onClick={() => handleAnswerSelect(option.letter, option.text)}\n            disabled={selectedAnswer !== null}\n            className={`answer-option border-2 p-4 transition-all duration-200 transform\n              bg-white text-gray-700 rounded-lg text-left\n              ${\n                selectedAnswer === null\n                  ? 'hover:bg-emerald-50 border-emerald-300 hover:border-emerald-500 hover:-translate-y-1 hover:shadow-md'\n                  : selectedAnswer === option.letter\n                  ? 'border-emerald-500 bg-emerald-50'\n                  : 'border-gray-200 opacity-50 cursor-not-allowed'\n              }`}\n          >\n            <span\n              className={`w-8 h-8 rounded-full text-center font-bold leading-8 mr-2 inline-block\n                ${\n                  selectedAnswer === option.letter\n                    ? 'bg-emerald-500 text-white'\n                    : 'bg-emerald-100 text-emerald-700'\n                }`}\n            >\n              {option.letter}\n            </span>\n            <span className='font-medium'>{option.text}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAgBO,SAAS,SAAS,EACvB,cAAc,EACd,cAAc,EACd,UAAU;AACV,QAAQ,EACR,OAAO,EACP,cAAc,EACA;IACd,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpE,MAAM,qBAAqB,CAAC,QAAgB;QAC1C,IAAI,mBAAmB,MAAM;YAC3B,kBAAkB;YAClB,eAAe;QACjB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;;wBAAyE;wBAC7E;wBAAe;wBAAK;;;;;;;;;;;;0BAMlC,8OAAC;gBAAE,WAAU;0BACV;;;;;;0BAEH,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;wBAEC,MAAK;wBACL,SAAS,IAAM,mBAAmB,OAAO,MAAM,EAAE,OAAO,IAAI;wBAC5D,UAAU,mBAAmB;wBAC7B,WAAW,CAAC;;cAEV,EACE,mBAAmB,OACf,yGACA,mBAAmB,OAAO,MAAM,GAChC,qCACA,iDACJ;;0CAEJ,8OAAC;gCACC,WAAW,CAAC;gBACV,EACE,mBAAmB,OAAO,MAAM,GAC5B,8BACA,mCACJ;0CAEH,OAAO,MAAM;;;;;;0CAEhB,8OAAC;gCAAK,WAAU;0CAAe,OAAO,IAAI;;;;;;;uBAxBrC,OAAO,MAAM;;;;;;;;;;;;;;;;AA8B9B","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/DuelHeader.tsx"],"sourcesContent":["interface DuelHeaderProps {\n  title: string;\n  opponent: string;\n  playerProgress: number;\n  opponentProgress: number;\n  totalQuestions: number;\n}\n\nexport function DuelHeader({\n  title,\n  opponent,\n  playerProgress,\n  // opponentProgress,\n  totalQuestions,\n}: DuelHeaderProps) {\n  return (\n    <div className='bg-emerald-100 rounded-lg mb-6 shadow-sm p-4'>\n      <div className='justify-between items-center flex'>\n        <div>\n          <p className='text-xl font-bold text-emerald-800'>{title}</p>\n          <p className='text-gray-600'>Vs. {opponent}</p>\n        </div>\n        {/* <div className='text-center bg-white rounded-lg shadow-md p-3'>\n          <p className='text-xl font-bold text-emerald-700'>{timeRemaining}</p>\n          <p className='text-sm text-gray-500'>Tiempo restante</p>\n        </div> */}\n      </div>\n      <div className='mt-4 items-center justify-between flex'>\n        <div className='items-center mr-4 flex space-x-2 flex-1'>\n          <div className='h-3 bg-emerald-200 rounded-full flex-grow'>\n            <div\n              style={{ width: `${(playerProgress / totalQuestions) * 100}%` }}\n              className='h-3 bg-emerald-500 rounded-full'\n            ></div>\n          </div>\n          <span className='font-medium text-gray-700'>\n            {playerProgress}/{totalQuestions}\n          </span>\n        </div>\n        <div className='items-center flex space-x-2 flex-1'>\n          {/* <div className='h-3 bg-gray-200 rounded-full flex-grow'>\n            <div\n              style={{ width: `${(opponentProgress / totalQuestions) * 100}%` }}\n              className='h-3 bg-gray-500 rounded-full'\n            ></div>\n          </div> */}\n          {/* <span className='font-medium text-gray-700'>\n            {opponentProgress}/{totalQuestions}\n          </span> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAQO,SAAS,WAAW,EACzB,KAAK,EACL,QAAQ,EACR,cAAc,EACd,oBAAoB;AACpB,cAAc,EACE;IAChB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;sCACC,8OAAC;4BAAE,WAAU;sCAAsC;;;;;;sCACnD,8OAAC;4BAAE,WAAU;;gCAAgB;gCAAK;;;;;;;;;;;;;;;;;;0BAOtC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,OAAO;wCAAE,OAAO,GAAG,AAAC,iBAAiB,iBAAkB,IAAI,CAAC,CAAC;oCAAC;oCAC9D,WAAU;;;;;;;;;;;0CAGd,8OAAC;gCAAK,WAAU;;oCACb;oCAAe;oCAAE;;;;;;;;;;;;;kCAGtB,8OAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAcvB","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/DuelResults.tsx"],"sourcesContent":["import {\n  TrophyIcon,\n  XCircleIcon,\n  HandRaisedIcon,\n} from '@heroicons/react/24/outline';\n\ninterface EloChange {\n  change: number;\n  current: number;\n  previous: number;\n}\n\ninterface DuelResultsData {\n  is_draw: boolean;\n  player1_elo: EloChange;\n  player1_rank: string;\n  player1_score: number;\n  player2_elo: EloChange;\n  player2_rank: string;\n  player2_score: number;\n  winner_id: string;\n  player1_id: string;\n  player2_id: string;\n}\n\ninterface DuelResultsProps {\n  results: DuelResultsData;\n  playerId: string;\n  opponentId: string;\n}\n\nexport function DuelResults({\n  results,\n  playerId,\n  opponentId,\n}: DuelResultsProps) {\n  const isWinner = results.winner_id === playerId;\n  const isPlayer1 = playerId === results.player1_id;\n  console.log('playerId', playerId);\n  console.log('results.player1_id', results.player1_id);\n  console.log('opponentId', opponentId);\n  console.log('isWinner', isWinner);\n  console.log('isPlayer1', isPlayer1);\n\n  const playerScore = isPlayer1 ? results.player1_score : results.player2_score;\n  const opponentScore = isPlayer1\n    ? results.player2_score\n    : results.player1_score;\n  const playerElo = isPlayer1 ? results.player1_elo : results.player2_elo;\n  const opponentElo = isPlayer1 ? results.player2_elo : results.player1_elo;\n  const playerRank = isPlayer1 ? results.player1_rank : results.player2_rank;\n  const opponentRank = isPlayer1 ? results.player2_rank : results.player1_rank;\n\n  return (\n    <div className='min-h-screen flex items-center justify-center bg-gray-50'>\n      <div className='max-w-2xl w-full bg-white rounded-xl shadow-lg p-8'>\n        <div className='text-center mb-8'>\n          <div className='flex justify-center mb-4'>\n            {results.is_draw ? (\n              <HandRaisedIcon className='h-16 w-16 text-yellow-500' />\n            ) : isWinner ? (\n              <TrophyIcon className='h-16 w-16 text-emerald-500' />\n            ) : (\n              <XCircleIcon className='h-16 w-16 text-red-500' />\n            )}\n          </div>\n          <h2 className='text-3xl font-bold text-gray-800 mb-2'>\n            {results.is_draw ? '¬°Empate!' : isWinner ? '¬°Victoria!' : 'Derrota'}\n          </h2>\n          <p className='text-gray-600'>\n            {results.is_draw\n              ? 'Ambos jugadores han empatado'\n              : isWinner\n              ? '¬°Has ganado el duelo!'\n              : 'Tu oponente ha ganado el duelo'}\n          </p>\n        </div>\n\n        <div className='grid grid-cols-2 gap-8'>\n          {/* Player Stats */}\n          <div className='bg-emerald-50 rounded-lg p-6'>\n            <h3 className='text-xl font-semibold text-emerald-800 mb-4'>\n              Tus Resultados\n            </h3>\n            <div className='space-y-3'>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Puntuaci√≥n:</span>\n                <span\n                  className={`font-semibold ${\n                    playerScore >= 0 ? 'text-emerald-600' : 'text-red-600'\n                  }`}\n                >\n                  {playerScore > 0 ? '+' : ''}\n                  {playerScore}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Rango:</span>\n                <span className='font-semibold text-emerald-800'>\n                  {playerRank}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>ELO:</span>\n                <div className='text-right'>\n                  <span className='font-semibold text-emerald-800'>\n                    {playerElo.current}\n                  </span>\n                  <span\n                    className={`ml-2 ${\n                      playerElo.change >= 0\n                        ? 'text-emerald-600'\n                        : 'text-red-600'\n                    }`}\n                  >\n                    ({playerElo.change > 0 ? '+' : ''}\n                    {playerElo.change})\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Opponent Stats */}\n          <div className='bg-gray-50 rounded-lg p-6'>\n            <h3 className='text-xl font-semibold text-gray-800 mb-4'>\n              Resultados del Oponente\n            </h3>\n            <div className='space-y-3'>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Puntuaci√≥n:</span>\n                <span\n                  className={`font-semibold ${\n                    opponentScore >= 0 ? 'text-emerald-600' : 'text-red-600'\n                  }`}\n                >\n                  {opponentScore > 0 ? '+' : ''}\n                  {opponentScore}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>Rango:</span>\n                <span className='font-semibold text-gray-800'>\n                  {opponentRank}\n                </span>\n              </div>\n              <div className='flex justify-between'>\n                <span className='text-gray-600'>ELO:</span>\n                <div className='text-right'>\n                  <span className='font-semibold text-gray-800'>\n                    {opponentElo.current}\n                  </span>\n                  <span\n                    className={`ml-2 ${\n                      opponentElo.change >= 0\n                        ? 'text-emerald-600'\n                        : 'text-red-600'\n                    }`}\n                  >\n                    ({opponentElo.change > 0 ? '+' : ''}\n                    {opponentElo.change})\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='mt-8 text-center'>\n          <button\n            onClick={() => window.location.reload()}\n            className='bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors'\n          >\n            Volver a Jugar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/quizScreen.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Question } from \"./Question\";\nimport { DuelHeader } from \"./DuelHeader\";\nimport { DuelResults } from \"./DuelResults\";\n// import { PowerUps } from './PowerUps';\n// import { StreakAlert } from './StreakAlert';\n\ninterface QuestionData {\n  id: string;\n  text: string;\n  answer: string;\n  options: string[];\n}\n\ninterface DuelResultsData {\n  is_draw: boolean;\n  player1_id: string;\n  player2_id: string;\n  player1_elo: {\n    change: number;\n    current: number;\n    previous: number;\n  };\n  player1_rank: string;\n  player1_score: number;\n  player2_elo: {\n    change: number;\n    current: number;\n    previous: number;\n  };\n  player2_rank: string;\n  player2_score: number;\n  winner_id: string;\n}\n\ninterface QuizScreenProps {\n  wsConnection: WebSocket | null;\n  playerId: string;\n  opponentId: string;\n}\n\nexport default function QuizScreen({\n  wsConnection,\n  playerId,\n  opponentId,\n}: QuizScreenProps) {\n  const [currentQuestion, setCurrentQuestion] = useState<QuestionData | null>(\n    null\n  );\n  const [isWaiting, setIsWaiting] = useState(true);\n  const [isInitializing, setIsInitializing] = useState(true);\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [totalQuestions] = useState(5);\n  const [error, setError] = useState<string | null>(null);\n  const [duelResults, setDuelResults] = useState<DuelResultsData | null>(null);\n\n  useEffect(() => {\n    if (!wsConnection) return;\n\n    console.log(`[${playerId}] Setting up WebSocket message handler`);\n    setIsInitializing(false); // Mark as initialized once we have a connection\n\n    const handleMessage = (event: MessageEvent) => {\n      try {\n        console.log(`[${playerId}] Raw WebSocket message:`, event.data);\n        console.log(`[${playerId}] Message type:`, typeof event.data);\n\n        // Handle plain text messages\n        if (typeof event.data === \"string\" && !event.data.startsWith(\"{\")) {\n          console.log(`[${playerId}] Received text message:`, event.data);\n\n          if (event.data.includes(\"Esperando al oponente\")) {\n            setIsWaiting(true);\n            setError(null);\n          } else if (\n            event.data === \"¬°Oponente conectado! El duelo comenzar√° pronto.\" ||\n            event.data === \"¬°Duelo listo!\"\n          ) {\n            console.log(\n              `[${playerId}] Both players connected, waiting for first question...`\n            );\n            setIsWaiting(true);\n            setError(null);\n          }\n          return;\n        }\n\n        // Handle JSON messages\n        const data =\n          typeof event.data === \"string\" ? JSON.parse(event.data) : event.data;\n        console.log(`[${playerId}] Parsed WebSocket message:`, data);\n\n        if (data.type === \"question\") {\n          console.log(`[${playerId}] Received question, starting quiz!`);\n          setIsWaiting(false);\n          setCurrentQuestion(data.data);\n          setError(null);\n          // Update opponent progress when new question arrives\n          setOpponentProgress((prev) => Math.min(prev + 1, totalQuestions) - 1);\n        } else if (data.type === \"opponent_progress\") {\n          console.log(\"Opponent progress update:\", data.progress);\n          setOpponentProgress(data.progress);\n          // If opponent has finished all questions, show waiting message\n          if (data.progress >= totalQuestions) {\n            setError(\"Tu oponente ha terminado. Esperando tus respuestas...\");\n          }\n        } else if (data.type === \"duel_end\") {\n          console.log(\"Duel end message received:\", data);\n          setDuelResults(data.data);\n          console.log(\"Duel results state set to:\", data.data);\n        } else if (data.type === \"error\") {\n          setError(data.message);\n        } else {\n          console.log(\"Unknown message type:\", data.type);\n        }\n      } catch (err) {\n        console.error(\"Error parsing WebSocket message:\", err);\n        console.error(\"Raw message that caused error:\", event.data);\n        setError(\"Error al procesar el mensaje del servidor\");\n      }\n    };\n\n    wsConnection.addEventListener(\"message\", handleMessage);\n\n    return () => {\n      console.log(`[${playerId}] Cleaning up WebSocket connection`);\n      wsConnection.removeEventListener(\"message\", handleMessage);\n    };\n  }, [wsConnection, playerId]); // Only depend on wsConnection and playerId, not totalQuestions\n\n  const handleAnswerSelect = (selectedOption: string) => {\n    if (!wsConnection || !currentQuestion) return;\n\n    try {\n      wsConnection.send(\n        JSON.stringify({\n          type: \"answer\",\n          questionId: currentQuestion.id,\n          answer: selectedOption,\n        })\n      );\n\n      setPlayerProgress((prev) => prev + 1);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error sending answer:\", err);\n      setError(\"Error al enviar la respuesta\");\n    }\n  };\n\n  if (duelResults) {\n    console.log(\"Rendering duel results:\", duelResults);\n    return (\n      <div className=\"min-h-screen\">\n        <DuelResults\n          results={duelResults}\n          playerId={playerId}\n          opponentId={opponentId}\n        />\n      </div>\n    );\n  }\n\n  if (isInitializing) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-emerald-500 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-700\">\n            Inicializando duelo...\n          </h2>\n          <p className=\"text-gray-500 mt-2\">\n            Estableciendo conexi√≥n con el servidor\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isWaiting) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-emerald-500 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-700\">\n            Esperando al oponente...\n          </h2>\n          <p className=\"text-gray-500 mt-2\">\n            El duelo comenzar√° cuando ambos jugadores est√©n listos\n          </p>\n          {error && <p className=\"text-orange-500 mt-2\">{error}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentQuestion) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-700\">\n            Esperando la siguiente pregunta...\n          </h2>\n          {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <main className=\"mx-auto px-4 py-6 flex-grow container\">\n        <div className=\"mx-auto max-w-3xl\">\n          {error && (\n            <div className=\"mb-4 p-4 bg-red-100 rounded-lg\">\n              <p className=\"text-red-700\">{error}</p>\n            </div>\n          )}\n\n          <DuelHeader\n            title=\"Duelo de Preguntas\"\n            opponent={opponentId}\n            playerProgress={playerProgress}\n            opponentProgress={opponentProgress}\n            totalQuestions={totalQuestions}\n          />\n\n          <Question\n            key={currentQuestion.id}\n            questionNumber={playerProgress + 1}\n            totalQuestions={totalQuestions}\n            question={currentQuestion.text}\n            options={currentQuestion.options.map((option, index) => ({\n              letter: String.fromCharCode(65 + index),\n              text: option,\n            }))}\n            onAnswerSelect={handleAnswerSelect}\n          />\n\n          {/* <PowerUps />\n\n          <StreakAlert\n            streak={3}\n            message='¬°Racha de 3 respuestas correctas! Pr√≥xima respuesta con puntos dobles.'\n          /> */}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 970, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/hooks/useWebSocketNotifications.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from \"react\";\n\ninterface PendingChallenge {\n  duelId: string;\n  requesterId: string;\n  requesterName: string;\n  timestamp: string;\n}\n\ninterface WebSocketMessage {\n  type: string;\n  duelId?: string;\n  requesterId?: string;\n  requesterName?: string;\n}\n\ninterface UseWebSocketNotificationsReturn {\n  pendingChallenges: PendingChallenge[];\n  addChallenge: (challenge: Omit<PendingChallenge, \"timestamp\">) => void;\n  removeChallenge: (duelId: string) => void;\n  connectionError: string | null;\n  isConnected: boolean;\n}\n\nexport const useWebSocketNotifications = (\n  userId: string | undefined\n): UseWebSocketNotificationsReturn => {\n  const [pendingChallenges, setPendingChallenges] = useState<\n    PendingChallenge[]\n  >([]);\n  const [connectionError, setConnectionError] = useState<string | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Usar useRef para evitar re-renders\n  const wsRef = useRef<WebSocket | null>(null);\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const heartbeatIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const connectionAttemptsRef = useRef(0);\n  const isConnectingRef = useRef(false);\n\n  const addChallenge = useCallback(\n    (challenge: Omit<PendingChallenge, \"timestamp\">) => {\n      console.log(\"Adding challenge:\", challenge);\n      setPendingChallenges((prev) => [\n        ...prev,\n        {\n          ...challenge,\n          timestamp: new Date().toISOString(),\n        },\n      ]);\n    },\n    []\n  );\n\n  const removeChallenge = useCallback((duelId: string) => {\n    console.log(\"Removing challenge:\", duelId);\n    setPendingChallenges((prev) =>\n      prev.filter((challenge) => challenge.duelId !== duelId)\n    );\n  }, []);\n\n  // Effect principal - solo depende de userId\n  useEffect(() => {\n    if (!userId) {\n      // Cleanup si no hay userId\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n\n      if (heartbeatIntervalRef.current) {\n        clearInterval(heartbeatIntervalRef.current);\n        heartbeatIntervalRef.current = null;\n      }\n\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.close(1000, \"No user ID\");\n      }\n\n      wsRef.current = null;\n      setIsConnected(false);\n      isConnectingRef.current = false;\n      return;\n    }\n\n    const connectWebSocket = () => {\n      if (\n        isConnectingRef.current ||\n        wsRef.current?.readyState === WebSocket.OPEN\n      ) {\n        return;\n      }\n\n      isConnectingRef.current = true;\n      connectionAttemptsRef.current++;\n      const wsUrl = `ws://localhost:8002/ws/notifications/${userId}`;\n      console.log(\n        `üîó Conectando WebSocket notificaciones (intento ${connectionAttemptsRef.current}): ${wsUrl}`\n      );\n\n      try {\n        const ws = new WebSocket(wsUrl);\n        wsRef.current = ws;\n\n        ws.onopen = () => {\n          console.log(\"‚úÖ WebSocket notificaciones conectado exitosamente\");\n          setConnectionError(null);\n          setIsConnected(true);\n          connectionAttemptsRef.current = 0; // Reset counter on successful connection\n          isConnectingRef.current = false;\n\n          // Configurar heartbeat para mantener la conexi√≥n viva\n          heartbeatIntervalRef.current = setInterval(() => {\n            if (ws.readyState === WebSocket.OPEN) {\n              ws.send(JSON.stringify({ type: \"heartbeat\" }));\n            }\n          }, 30000);\n        };\n\n        ws.onmessage = (event) => {\n          try {\n            console.log(\"üì© Mensaje WebSocket recibido:\", event.data);\n            const data: WebSocketMessage = JSON.parse(event.data);\n\n            if (data.type === \"welcome\") {\n              console.log(\"üëã Mensaje de bienvenida recibido\");\n            } else if (\n              data.type === \"duel_request\" &&\n              data.duelId &&\n              data.requesterId &&\n              data.requesterName\n            ) {\n              console.log(\"‚öîÔ∏è Solicitud de duelo recibida:\", data);\n              setPendingChallenges((prev) => [\n                ...prev,\n                {\n                  duelId: data.duelId as string,\n                  requesterId: data.requesterId as string,\n                  requesterName: data.requesterName as string,\n                  timestamp: new Date().toISOString(),\n                },\n              ]);\n            } else if (data.type === \"heartbeat\") {\n              // Ignorar heartbeat responses silenciosamente\n            } else {\n              console.log(\"‚ùì Tipo de mensaje desconocido:\", data.type);\n            }\n          } catch (error) {\n            console.error(\"‚ùå Error parsing WebSocket message:\", error);\n          }\n        };\n\n        ws.onerror = (error) => {\n          console.error(\"‚ùå Error WebSocket notificaciones:\", error);\n          setIsConnected(false);\n          isConnectingRef.current = false;\n\n          if (connectionAttemptsRef.current > 2) {\n            setConnectionError(\n              \"Error de conexi√≥n con el servidor. Reintentando...\"\n            );\n          }\n        };\n\n        ws.onclose = (event) => {\n          console.log(\n            `üîå WebSocket notificaciones cerrado. Code: ${event.code}, Reason: ${event.reason}`\n          );\n          setIsConnected(false);\n          isConnectingRef.current = false;\n\n          // Limpiar heartbeat\n          if (heartbeatIntervalRef.current) {\n            clearInterval(heartbeatIntervalRef.current);\n            heartbeatIntervalRef.current = null;\n          }\n\n          // Solo reconectar si no fue un cierre normal y no hemos intentado demasiadas veces\n          if (\n            event.code !== 1000 && // No fue cierre normal\n            event.code !== 1001 && // No fue \"going away\"\n            connectionAttemptsRef.current < 5\n          ) {\n            console.log(\n              `üîÑ Reintentando conexi√≥n en 5 segundos (intento ${\n                connectionAttemptsRef.current + 1\n              }/5)`\n            );\n            reconnectTimeoutRef.current = setTimeout(() => {\n              connectWebSocket();\n            }, 5000);\n          } else if (connectionAttemptsRef.current >= 5) {\n            console.error(\"‚ùå M√°ximo de reintentos alcanzado\");\n            setConnectionError(\n              \"No se pudo establecer conexi√≥n con el servidor de notificaciones.\"\n            );\n          }\n        };\n      } catch (error) {\n        console.error(\"‚ùå Error creando WebSocket:\", error);\n        setIsConnected(false);\n        isConnectingRef.current = false;\n        setConnectionError(\"Error al crear conexi√≥n WebSocket\");\n      }\n    };\n\n    // Peque√±o delay para evitar conexiones m√∫ltiples r√°pidas\n    const connectTimer = setTimeout(connectWebSocket, 200);\n\n    return () => {\n      console.log(\"üßπ Limpiando conexi√≥n WebSocket\");\n      clearTimeout(connectTimer);\n\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n\n      if (heartbeatIntervalRef.current) {\n        clearInterval(heartbeatIntervalRef.current);\n        heartbeatIntervalRef.current = null;\n      }\n\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.close(1000, \"Component cleanup\");\n      }\n\n      wsRef.current = null;\n      setIsConnected(false);\n      isConnectingRef.current = false;\n    };\n  }, [userId]); // SOLO userId en dependencias\n\n  return {\n    pendingChallenges,\n    addChallenge,\n    removeChallenge,\n    connectionError,\n    isConnected,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1145, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/hooks/useDuelWebSocket.ts"],"sourcesContent":["import { useState, useCallback, useRef } from \"react\";\n\ninterface UseDuelWebSocketReturn {\n  wsConnection: WebSocket | null;\n  connectToDuel: (duelId: string, userId: string) => Promise<void>;\n  disconnect: () => void;\n  connectionError: string | null;\n  isConnecting: boolean;\n}\n\nexport const useDuelWebSocket = (): UseDuelWebSocketReturn => {\n  const [wsConnection, setWsConnection] = useState<WebSocket | null>(null);\n  const [connectionError, setConnectionError] = useState<string | null>(null);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const wsRef = useRef<WebSocket | null>(null);\n\n  const connectToDuel = useCallback(\n    async (duelId: string, userId: string): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        try {\n          if (isConnecting) {\n            console.log(`[${userId}] Already connecting to duel, skipping...`);\n            reject(new Error(\"Connection already in progress\"));\n            return;\n          }\n\n          setIsConnecting(true);\n          console.log(\n            `[${userId}] Starting duel WebSocket connection to: ${duelId}`\n          );\n\n          // Close existing connection if any - use functional state update\n          setWsConnection((prevConnection) => {\n            if (prevConnection) {\n              console.log(`[${userId}] Closing existing WebSocket connection`);\n              prevConnection.close();\n            }\n            return null;\n          });\n\n          const wsUrl = `ws://localhost:8002/ws/duels/${duelId}/${userId}`;\n          console.log(`[${userId}] Connecting to WebSocket URL: ${wsUrl}`);\n\n          const ws = new WebSocket(wsUrl);\n          wsRef.current = ws;\n\n          ws.onopen = () => {\n            console.log(`[${userId}] Duel WebSocket connected successfully`);\n            setConnectionError(null);\n            setWsConnection(ws);\n            setIsConnecting(false);\n            resolve();\n          };\n\n          ws.onerror = (error) => {\n            console.error(`[${userId}] Duel WebSocket error:`, error);\n            setConnectionError(\"Error en la conexi√≥n WebSocket\");\n            setIsConnecting(false);\n            reject(new Error(\"WebSocket connection failed\"));\n          };\n\n          ws.onclose = (event) => {\n            console.log(\n              `[${userId}] Duel WebSocket closed. Code: ${event.code}, Reason: ${event.reason}`\n            );\n            setWsConnection(null);\n            setIsConnecting(false);\n\n            if (event.code !== 1000) {\n              setConnectionError(\"Conexi√≥n perdida con el duelo\");\n            }\n          };\n        } catch (error) {\n          console.error(`[${userId}] Error creating duel WebSocket:`, error);\n          setConnectionError(\"Error al crear conexi√≥n WebSocket\");\n          setIsConnecting(false);\n          reject(error);\n        }\n      });\n    },\n    [isConnecting] // Add isConnecting to dependencies\n  );\n\n  const disconnect = useCallback(() => {\n    console.log(\"Disconnecting duel WebSocket...\");\n    setWsConnection((prevConnection) => {\n      if (prevConnection) {\n        prevConnection.close(1000, \"User requested disconnect\");\n      }\n      return null;\n    });\n    setIsConnecting(false);\n    setConnectionError(null);\n  }, []);\n\n  return {\n    wsConnection,\n    connectToDuel,\n    disconnect,\n    connectionError,\n    isConnecting,\n  };\n};\n"],"names":[],"mappings":";;;AAAA;;AAUO,MAAM,mBAAmB;IAC9B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IACnE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACtE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAEvC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC9B,OAAO,QAAgB;QACrB,OAAO,IAAI,QAAQ,CAAC,SAAS;YAC3B,IAAI;gBACF,IAAI,cAAc;oBAChB,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,yCAAyC,CAAC;oBACjE,OAAO,IAAI,MAAM;oBACjB;gBACF;gBAEA,gBAAgB;gBAChB,QAAQ,GAAG,CACT,CAAC,CAAC,EAAE,OAAO,yCAAyC,EAAE,QAAQ;gBAGhE,iEAAiE;gBACjE,gBAAgB,CAAC;oBACf,IAAI,gBAAgB;wBAClB,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,uCAAuC,CAAC;wBAC/D,eAAe,KAAK;oBACtB;oBACA,OAAO;gBACT;gBAEA,MAAM,QAAQ,CAAC,6BAA6B,EAAE,OAAO,CAAC,EAAE,QAAQ;gBAChE,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,+BAA+B,EAAE,OAAO;gBAE/D,MAAM,KAAK,IAAI,UAAU;gBACzB,MAAM,OAAO,GAAG;gBAEhB,GAAG,MAAM,GAAG;oBACV,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,uCAAuC,CAAC;oBAC/D,mBAAmB;oBACnB,gBAAgB;oBAChB,gBAAgB;oBAChB;gBACF;gBAEA,GAAG,OAAO,GAAG,CAAC;oBACZ,QAAQ,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,uBAAuB,CAAC,EAAE;oBACnD,mBAAmB;oBACnB,gBAAgB;oBAChB,OAAO,IAAI,MAAM;gBACnB;gBAEA,GAAG,OAAO,GAAG,CAAC;oBACZ,QAAQ,GAAG,CACT,CAAC,CAAC,EAAE,OAAO,+BAA+B,EAAE,MAAM,IAAI,CAAC,UAAU,EAAE,MAAM,MAAM,EAAE;oBAEnF,gBAAgB;oBAChB,gBAAgB;oBAEhB,IAAI,MAAM,IAAI,KAAK,MAAM;wBACvB,mBAAmB;oBACrB;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,gCAAgC,CAAC,EAAE;gBAC5D,mBAAmB;gBACnB,gBAAgB;gBAChB,OAAO;YACT;QACF;IACF,GACA;QAAC;KAAa,CAAC,mCAAmC;;IAGpD,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,QAAQ,GAAG,CAAC;QACZ,gBAAgB,CAAC;YACf,IAAI,gBAAgB;gBAClB,eAAe,KAAK,CAAC,MAAM;YAC7B;YACA,OAAO;QACT;QACA,gBAAgB;QAChB,mBAAmB;IACrB,GAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/lib/duel-hooks-apollo.ts"],"sourcesContent":["'use client';\n\nimport { useMutation, useLazyQuery, gql } from '@apollo/client';\n\n// Queries\nconst GET_USER_BY_EMAIL_QUERY = gql`\n  query GetUserByEmail($email: String!) {\n    getUserByEmail(email: $email) {\n      id\n      username\n      email\n      fullName\n      avatar\n      role\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\n// Mutations\nconst REQUEST_DUEL_MUTATION = gql`\n  mutation RequestDuel($input: RequestDuelInput!) {\n    requestDuel(input: $input) {\n      duelId\n      message\n    }\n  }\n`;\n\nconst ACCEPT_DUEL_MUTATION = gql`\n  mutation AcceptDuel($input: AcceptDuelInput!) {\n    acceptDuel(input: $input) {\n      duelId\n      message\n    }\n  }\n`;\n\n// Hook para buscar usuario por email\nexport function useSearchUserByEmail() {\n  const [searchUser, { loading, error, data }] = useLazyQuery(\n    GET_USER_BY_EMAIL_QUERY,\n    {\n      errorPolicy: 'all',\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const searchUserByEmail = async (email: string) => {\n    try {\n      const { data: result } = await searchUser({\n        variables: { email },\n      });\n\n      return result?.getUserByEmail || null;\n    } catch (err) {\n      console.error('Error searching user by email:', err);\n      throw err;\n    }\n  };\n\n  return {\n    searchUserByEmail,\n    loading,\n    error: error?.message || null,\n    user: data?.getUserByEmail || null,\n  };\n}\n\n// Hook para solicitar duelo\nexport function useRequestDuel() {\n  const [requestDuelMutation, { loading, error }] = useMutation(\n    REQUEST_DUEL_MUTATION,\n    {\n      errorPolicy: 'all',\n    }\n  );\n\n  const requestDuel = async (requesterId: string, opponentId: string) => {\n    try {\n      const { data } = await requestDuelMutation({\n        variables: {\n          input: {\n            requesterId,\n            opponentId,\n          },\n        },\n      });\n\n      return data.requestDuel;\n    } catch (err) {\n      console.error('Error requesting duel:', err);\n      throw err;\n    }\n  };\n\n  return { requestDuel, loading, error: error?.message || null };\n}\n\n// Hook para aceptar duelo\nexport function useAcceptDuel() {\n  const [acceptDuelMutation, { loading, error }] = useMutation(\n    ACCEPT_DUEL_MUTATION,\n    {\n      errorPolicy: 'all',\n    }\n  );\n\n  const acceptDuel = async (duelId: string) => {\n    try {\n      const { data } = await acceptDuelMutation({\n        variables: {\n          input: { duelId },\n        },\n      });\n\n      return data.acceptDuel;\n    } catch (err) {\n      console.error('Error accepting duel:', err);\n      throw err;\n    }\n  };\n\n  return { acceptDuel, loading, error: error?.message || null };\n}\n\n// Hook combinado para gesti√≥n de duelos\nexport function useDuels() {\n  const {\n    searchUserByEmail,\n    loading: searchLoading,\n    error: searchError,\n    user: foundUser,\n  } = useSearchUserByEmail();\n\n  const {\n    requestDuel,\n    loading: requestLoading,\n    error: requestError,\n  } = useRequestDuel();\n\n  const {\n    acceptDuel,\n    loading: acceptLoading,\n    error: acceptError,\n  } = useAcceptDuel();\n\n  return {\n    // Search functionality\n    searchUserByEmail,\n    foundUser,\n    searchLoading,\n    searchError,\n\n    // Duel request functionality\n    requestDuel,\n    requestLoading,\n    requestError,\n\n    // Duel accept functionality\n    acceptDuel,\n    acceptLoading,\n    acceptError,\n\n    // Combined loading states\n    isLoading: searchLoading || requestLoading || acceptLoading,\n    error: searchError || requestError || acceptError,\n  };\n}\n"],"names":[],"mappings":";;;;;;AAEA;AAAA;AAAA;AAFA;;AAIA,UAAU;AACV,MAAM,0BAA0B,8IAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;AAapC,CAAC;AAED,YAAY;AACZ,MAAM,wBAAwB,8IAAA,CAAA,MAAG,CAAC;;;;;;;AAOlC,CAAC;AAED,MAAM,uBAAuB,8IAAA,CAAA,MAAG,CAAC;;;;;;;AAOjC,CAAC;AAGM,SAAS;IACd,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EACxD,yBACA;QACE,aAAa;QACb,aAAa;IACf;IAGF,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,MAAM,EAAE,MAAM,MAAM,EAAE,GAAG,MAAM,WAAW;gBACxC,WAAW;oBAAE;gBAAM;YACrB;YAEA,OAAO,QAAQ,kBAAkB;QACnC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR;IACF;IAEA,OAAO;QACL;QACA;QACA,OAAO,OAAO,WAAW;QACzB,MAAM,MAAM,kBAAkB;IAChC;AACF;AAGO,SAAS;IACd,MAAM,CAAC,qBAAqB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAC1D,uBACA;QACE,aAAa;IACf;IAGF,MAAM,cAAc,OAAO,aAAqB;QAC9C,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,oBAAoB;gBACzC,WAAW;oBACT,OAAO;wBACL;wBACA;oBACF;gBACF;YACF;YAEA,OAAO,KAAK,WAAW;QACzB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACR;IACF;IAEA,OAAO;QAAE;QAAa;QAAS,OAAO,OAAO,WAAW;IAAK;AAC/D;AAGO,SAAS;IACd,MAAM,CAAC,oBAAoB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EACzD,sBACA;QACE,aAAa;IACf;IAGF,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,mBAAmB;gBACxC,WAAW;oBACT,OAAO;wBAAE;oBAAO;gBAClB;YACF;YAEA,OAAO,KAAK,UAAU;QACxB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,OAAO;QAAE;QAAY;QAAS,OAAO,OAAO,WAAW;IAAK;AAC9D;AAGO,SAAS;IACd,MAAM,EACJ,iBAAiB,EACjB,SAAS,aAAa,EACtB,OAAO,WAAW,EAClB,MAAM,SAAS,EAChB,GAAG;IAEJ,MAAM,EACJ,WAAW,EACX,SAAS,cAAc,EACvB,OAAO,YAAY,EACpB,GAAG;IAEJ,MAAM,EACJ,UAAU,EACV,SAAS,aAAa,EACtB,OAAO,WAAW,EACnB,GAAG;IAEJ,OAAO;QACL,uBAAuB;QACvB;QACA;QACA;QACA;QAEA,6BAA6B;QAC7B;QACA;QACA;QAEA,4BAA4B;QAC5B;QACA;QACA;QAEA,0BAA0B;QAC1B,WAAW,iBAAiB,kBAAkB;QAC9C,OAAO,eAAe,gBAAgB;IACxC;AACF","debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/hooks/useDuelOperations.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { useDuels } from \"@/lib/duel-hooks-apollo\";\nimport { RequestDuelResponse } from \"../../types/duel\";\n\ninterface User {\n  id: string;\n  email: string;\n  fullName?: string;\n  username?: string;\n  role?: string;\n}\n\ninterface UseDuelOperationsReturn {\n  // User search\n  opponentEmail: string;\n  setOpponentEmail: (email: string) => void;\n  foundUser: User | null;\n  searchUser: () => Promise<void>;\n  searchLoading: boolean;\n\n  // Duel operations\n  requestDuel: (\n    requesterId: string,\n    opponentId: string\n  ) => Promise<RequestDuelResponse>;\n  acceptDuel: (duelId: string) => Promise<RequestDuelResponse>;\n  requestLoading: boolean;\n  acceptLoading: boolean;\n\n  // State\n  duelResponse: RequestDuelResponse | null;\n  clearDuelResponse: () => void;\n}\n\nexport const useDuelOperations = (): UseDuelOperationsReturn => {\n  const [opponentEmail, setOpponentEmail] = useState(\"\");\n  const [duelResponse, setDuelResponse] = useState<RequestDuelResponse | null>(\n    null\n  );\n\n  const {\n    searchUserByEmail,\n    foundUser,\n    searchLoading,\n    requestDuel: apolloRequestDuel,\n    requestLoading,\n    acceptDuel: apolloAcceptDuel,\n    acceptLoading,\n  } = useDuels();\n\n  const searchUser = useCallback(async () => {\n    if (!opponentEmail) {\n      throw new Error(\"Por favor, ingresa el correo del oponente\");\n    }\n\n    const user = await searchUserByEmail(opponentEmail);\n    if (!user) {\n      throw new Error(\"No se encontr√≥ ning√∫n usuario con ese correo\");\n    }\n  }, [opponentEmail, searchUserByEmail]);\n\n  const requestDuel = useCallback(\n    async (\n      requesterId: string,\n      opponentId: string\n    ): Promise<RequestDuelResponse> => {\n      const response = await apolloRequestDuel(requesterId, opponentId);\n      setDuelResponse(response);\n      return response;\n    },\n    [apolloRequestDuel]\n  );\n\n  const acceptDuel = useCallback(\n    async (duelId: string): Promise<RequestDuelResponse> => {\n      const response = await apolloAcceptDuel(duelId);\n      setDuelResponse(response);\n      return response;\n    },\n    [apolloAcceptDuel]\n  );\n\n  const clearDuelResponse = useCallback(() => {\n    setDuelResponse(null);\n  }, []);\n\n  return {\n    opponentEmail,\n    setOpponentEmail,\n    foundUser,\n    searchUser,\n    searchLoading,\n    requestDuel,\n    acceptDuel,\n    requestLoading,\n    acceptLoading,\n    duelResponse,\n    clearDuelResponse,\n  };\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAiCO,MAAM,oBAAoB;IAC/B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAC7C;IAGF,MAAM,EACJ,iBAAiB,EACjB,SAAS,EACT,aAAa,EACb,aAAa,iBAAiB,EAC9B,cAAc,EACd,YAAY,gBAAgB,EAC5B,aAAa,EACd,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEX,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI,CAAC,eAAe;YAClB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,kBAAkB;QACrC,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,MAAM;QAClB;IACF,GAAG;QAAC;QAAe;KAAkB;IAErC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC5B,OACE,aACA;QAEA,MAAM,WAAW,MAAM,kBAAkB,aAAa;QACtD,gBAAgB;QAChB,OAAO;IACT,GACA;QAAC;KAAkB;IAGrB,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC3B,OAAO;QACL,MAAM,WAAW,MAAM,iBAAiB;QACxC,gBAAgB;QAChB,OAAO;IACT,GACA;QAAC;KAAiB;IAGpB,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACpC,gBAAgB;IAClB,GAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 1442, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/DuelLanding.tsx"],"sourcesContent":["import { TrophyIcon } from \"@heroicons/react/24/outline\";\nimport Image from \"next/image\";\n\nexport default function DuelLanding() {\n  return (\n    <div className=\"lg:w-1/2 bg-gradient-to-br rounded-xl shadow-xl from-emerald-500 to-emerald-700 overflow-hidden\">\n      <div className=\"flex flex-col\">\n        <div className=\"items-center justify-center p-6 flex\">\n          <Image\n            src=\"/images/duels.webp\"\n            alt=\"Duelo\"\n            width={300}\n            height={400}\n            className=\"object-cover transform hover:scale-105 transition duration-300 rounded-lg h-64\"\n          />\n        </div>\n        <div className=\"text-white p-6\">\n          <p className=\"text-2xl font-bold mb-4\">¬°Desaf√≠a a tus compa√±eros!</p>\n          <p className=\"mb-4\">\n            Pon a prueba tus conocimientos y demuestra qui√©n es el mejor en tu\n            clase. Gana monedas, experiencia y desbloquea logros especiales.\n          </p>\n          <div className=\"bg-white/20 rounded-lg mb-4 backdrop-blur-sm p-4\">\n            <p className=\"font-bold text-xl mb-2\">Beneficios de los Duelos</p>\n            <ul className=\"list-disc list-inside space-y-1\">\n              <li>Gana hasta 50 monedas por victoria</li>\n              <li>Sube en el ranking de tu clase</li>\n              <li>Desbloquea insignias exclusivas</li>\n              <li>Refuerza tu aprendizaje mientras juegas</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;8BAGd,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAA0B;;;;;;sCACvC,8OAAC;4BAAE,WAAU;sCAAO;;;;;;sCAIpB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAyB;;;;;;8CACtC,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;sDAAG;;;;;;sDACJ,8OAAC;sDAAG;;;;;;sDACJ,8OAAC;sDAAG;;;;;;sDACJ,8OAAC;sDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlB","debugId":null}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/components/Button.tsx"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport Link from 'next/link';\nimport clsx from 'clsx';\n\ntype ButtonVariant = 'primary' | 'secondary';\n\ninterface ButtonProps {\n  children: React.ReactNode;\n  variant?: ButtonVariant;\n  href?: string;\n  onClick?: () => void;\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n  disabled?: boolean;\n}\n\nexport const Button = ({\n  children,\n  variant = 'primary',\n  href,\n  onClick,\n  className = '',\n  type = 'button',\n  disabled = false,\n}: ButtonProps) => {\n  const baseClasses = `items-center justify-center px-8 py-3 text-base font-medium rounded-md inline-flex \n    transition-all duration-300 ease-in-out transform \n    hover:scale-105 hover:shadow-lg active:scale-95 active:opacity-80 \n    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 \n    disabled:opacity-50 disabled:cursor-not-allowed \n    relative z-10 hover:cursor-pointer`;\n\n  const variantClasses = {\n    primary: `text-white bg-emerald-600 border border-transparent \n      hover:bg-emerald-700 hover:shadow-lg active:bg-emerald-500`,\n    secondary: `text-emerald-600 bg-white border border-emerald-600 \n      hover:bg-emerald-50 hover:shadow-sm active:bg-emerald-100`,\n  };\n\n  const buttonClasses = clsx(\n    baseClasses,\n    variantClasses[variant],\n    className,\n    disabled && 'opacity-50 cursor-not-allowed'\n  );\n\n  if (href) {\n    return (\n      <Link href={href} className={buttonClasses}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAiBO,MAAM,SAAS,CAAC,EACrB,QAAQ,EACR,UAAU,SAAS,EACnB,IAAI,EACJ,OAAO,EACP,YAAY,EAAE,EACd,OAAO,QAAQ,EACf,WAAW,KAAK,EACJ;IACZ,MAAM,cAAc,CAAC;;;;;sCAKe,CAAC;IAErC,MAAM,iBAAiB;QACrB,SAAS,CAAC;gEACkD,CAAC;QAC7D,WAAW,CAAC;+DAC+C,CAAC;IAC9D;IAEA,MAAM,gBAAgB,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACvB,aACA,cAAc,CAAC,QAAQ,EACvB,WACA,YAAY;IAGd,IAAI,MAAM;QACR,qBACE,8OAAC,4JAAA,CAAA,UAAI;YAAC,MAAM;YAAM,WAAW;sBAC1B;;;;;;IAGP;IAEA,qBACE,8OAAC;QACC,MAAM;QACN,WAAW;QACX,SAAS;QACT,UAAU;kBAET;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 1625, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/OpponentSearch.tsx"],"sourcesContent":["import { FormEvent } from \"react\";\nimport Button from \"@/components/Button\";\n\ninterface User {\n  id: string;\n  email: string;\n  fullName?: string;\n  username?: string;\n  role?: string;\n}\n\ninterface OpponentSearchProps {\n  opponentEmail: string;\n  setOpponentEmail: (email: string) => void;\n  onSearch: () => Promise<void>;\n  onRequestDuel: () => Promise<void>;\n  foundUser: User | null;\n  searchLoading: boolean;\n  requestLoading: boolean;\n}\n\nexport default function OpponentSearch({\n  opponentEmail,\n  setOpponentEmail,\n  onSearch,\n  onRequestDuel,\n  foundUser,\n  searchLoading,\n  requestLoading,\n}: OpponentSearchProps) {\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    await onSearch();\n  };\n\n  return (\n    <div className=\"lg:w-full bg-white rounded-xl shadow-lg border border-emerald-100 p-6 flex flex-col justify-center\">\n      <div className=\"items-center mb-6 flex\">\n        <div className=\"bg-emerald-100 rounded-full mr-3 p-2\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 text-emerald-600\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"\n            />\n          </svg>\n        </div>\n        <p className=\"text-2xl font-bold text-gray-800\">\n          Desafiar a un Estudiante\n        </p>\n      </div>\n\n      <form className=\"space-y-6\" onSubmit={handleSubmit}>\n        <div>\n          <label\n            htmlFor=\"opponentEmail\"\n            className=\"text-sm font-medium text-gray-700 mb-1 block\"\n          >\n            Correo del estudiante\n          </label>\n          <div className=\"relative\">\n            <div className=\"pl-3 items-center absolute inset-y-0 left-0 flex pointer-events-none\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-5 w-5 text-gray-400\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n                />\n              </svg>\n            </div>\n            <input\n              name=\"opponentEmail\"\n              type=\"email\"\n              value={opponentEmail}\n              onChange={(e) => setOpponentEmail(e.target.value)}\n              placeholder=\"estudiante@universidad.edu\"\n              className=\"border border-gray-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition pl-10 w-full py-3 rounded-lg\"\n              id=\"opponentEmail\"\n            />\n          </div>\n        </div>\n        <div className=\"pt-2\">\n          <Button\n            type=\"submit\"\n            disabled={searchLoading}\n            className=\"hover:bg-emerald-700 transition duration-300 hover:shadow-lg transform hover:-translate-y-1 w-full bg-emerald-600 text-white font-bold py-3 rounded-lg shadow-md\"\n          >\n            {searchLoading ? \"Buscando...\" : \"Buscar Estudiante\"}\n          </Button>\n        </div>\n      </form>\n\n      {foundUser && (\n        <div className=\"mt-6 p-4 bg-emerald-50 rounded-lg\">\n          <h3 className=\"font-bold text-emerald-800 mb-2\">\n            Oponente Encontrado:\n          </h3>\n          <p className=\"text-gray-700\">\n            Nombre: {foundUser.fullName || foundUser.username}\n          </p>\n          <p className=\"text-gray-700\">Correo: {foundUser.email}</p>\n          <p className=\"text-gray-700\">Rol: {foundUser.role}</p>\n          <Button\n            onClick={onRequestDuel}\n            disabled={requestLoading}\n            className=\"mt-4 hover:bg-emerald-700 transition duration-300 hover:shadow-lg transform hover:-translate-y-1 w-full bg-emerald-600 text-white font-bold py-3 rounded-lg shadow-md\"\n          >\n            {requestLoading ? \"Solicitando...\" : \"Solicitar Duelo\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAoBe,SAAS,eAAe,EACrC,aAAa,EACb,gBAAgB,EAChB,QAAQ,EACR,aAAa,EACb,SAAS,EACT,aAAa,EACb,cAAc,EACM;IACpB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM;IACR;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,OAAM;4BACN,WAAU;4BACV,MAAK;4BACL,SAAQ;4BACR,QAAO;sCAEP,cAAA,8OAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAY;gCACZ,GAAE;;;;;;;;;;;;;;;;kCAIR,8OAAC;wBAAE,WAAU;kCAAmC;;;;;;;;;;;;0BAKlD,8OAAC;gBAAK,WAAU;gBAAY,UAAU;;kCACpC,8OAAC;;0CACC,8OAAC;gCACC,SAAQ;gCACR,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CACC,OAAM;4CACN,WAAU;4CACV,MAAK;4CACL,SAAQ;4CACR,QAAO;sDAEP,cAAA,8OAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAY;gDACZ,GAAE;;;;;;;;;;;;;;;;kDAIR,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wCAChD,aAAY;wCACZ,WAAU;wCACV,IAAG;;;;;;;;;;;;;;;;;;kCAIT,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,qHAAA,CAAA,UAAM;4BACL,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,gBAAgB,gBAAgB;;;;;;;;;;;;;;;;;YAKtC,2BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAkC;;;;;;kCAGhD,8OAAC;wBAAE,WAAU;;4BAAgB;4BAClB,UAAU,QAAQ,IAAI,UAAU,QAAQ;;;;;;;kCAEnD,8OAAC;wBAAE,WAAU;;4BAAgB;4BAAS,UAAU,KAAK;;;;;;;kCACrD,8OAAC;wBAAE,WAAU;;4BAAgB;4BAAM,UAAU,IAAI;;;;;;;kCACjD,8OAAC,qHAAA,CAAA,UAAM;wBACL,SAAS;wBACT,UAAU;wBACV,WAAU;kCAET,iBAAiB,mBAAmB;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 1852, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/PendingChallenges.tsx"],"sourcesContent":["interface PendingChallenge {\n  duelId: string;\n  requesterId: string;\n  requesterName: string;\n  timestamp: string;\n}\n\ninterface PendingChallengesProps {\n  challenges: PendingChallenge[];\n  onAccept: (duelId: string) => void;\n  onReject: (duelId: string) => void;\n  acceptLoading: boolean;\n}\n\nexport default function PendingChallenges({\n  challenges,\n  onAccept,\n  onReject,\n  acceptLoading,\n}: PendingChallengesProps) {\n  if (challenges.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-6 pt-4 border-t border-gray-200\">\n      <p className=\"font-semibold text-gray-700 mb-2\">Desaf√≠os Pendientes</p>\n      <div className=\"space-y-3\">\n        {challenges.map((challenge) => (\n          <div\n            key={challenge.duelId}\n            className=\"justify-between items-center bg-emerald-50 rounded-lg flex p-3\"\n          >\n            <div className=\"items-center flex\">\n              <div>\n                <p className=\"font-medium text-gray-800\">¬°Desaf√≠o recibido!</p>\n                <p className=\"text-xs text-gray-500\">ID: {challenge.duelId}</p>\n                <p className=\"text-xs text-gray-500\">\n                  Recibido: {new Date(challenge.timestamp).toLocaleString()}\n                </p>\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => onAccept(challenge.duelId)}\n                disabled={acceptLoading}\n                className=\"hover:bg-emerald-600 bg-emerald-500 text-white px-3 py-1 rounded-md text-sm disabled:opacity-50\"\n              >\n                {acceptLoading ? \"Aceptando...\" : \"Aceptar\"}\n              </button>\n              <button\n                onClick={() => onReject(challenge.duelId)}\n                className=\"hover:bg-gray-300 bg-gray-200 text-gray-700 px-3 py-1 rounded-md text-sm\"\n              >\n                Rechazar\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAce,SAAS,kBAAkB,EACxC,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,aAAa,EACU;IACvB,IAAI,WAAW,MAAM,KAAK,GAAG;QAC3B,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAmC;;;;;;0BAChD,8OAAC;gBAAI,WAAU;0BACZ,WAAW,GAAG,CAAC,CAAC,0BACf,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;;sDACC,8OAAC;4CAAE,WAAU;sDAA4B;;;;;;sDACzC,8OAAC;4CAAE,WAAU;;gDAAwB;gDAAK,UAAU,MAAM;;;;;;;sDAC1D,8OAAC;4CAAE,WAAU;;gDAAwB;gDACxB,IAAI,KAAK,UAAU,SAAS,EAAE,cAAc;;;;;;;;;;;;;;;;;;0CAI7D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAM,SAAS,UAAU,MAAM;wCACxC,UAAU;wCACV,WAAU;kDAET,gBAAgB,iBAAiB;;;;;;kDAEpC,8OAAC;wCACC,SAAS,IAAM,SAAS,UAAU,MAAM;wCACxC,WAAU;kDACX;;;;;;;;;;;;;uBAvBE,UAAU,MAAM;;;;;;;;;;;;;;;;AAgCjC","debugId":null}},
    {"offset": {"line": 1974, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/components/DuelInfo.tsx"],"sourcesContent":["import { RequestDuelResponse } from \"../../types/duel\";\n\ninterface DuelInfoProps {\n  duelResponse: RequestDuelResponse | null;\n  error: string | null;\n}\n\nexport default function DuelInfo({ duelResponse, error }: DuelInfoProps) {\n  return (\n    <>\n      {duelResponse && (\n        <div className=\"mt-6 p-4 bg-emerald-50 rounded-lg\">\n          <h3 className=\"font-bold text-emerald-800 mb-2\">Duelo Solicitado:</h3>\n          <p className=\"text-gray-700\">ID del Duelo: {duelResponse.duelId}</p>\n          <p className=\"text-gray-700\">Mensaje: {duelResponse.message}</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"mt-6 p-4 bg-red-50 rounded-lg\">\n          <h3 className=\"font-bold text-red-700 mb-2\">Error:</h3>\n          <p className=\"text-red-600\">{error}</p>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAOe,SAAS,SAAS,EAAE,YAAY,EAAE,KAAK,EAAiB;IACrE,qBACE;;YACG,8BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAkC;;;;;;kCAChD,8OAAC;wBAAE,WAAU;;4BAAgB;4BAAe,aAAa,MAAM;;;;;;;kCAC/D,8OAAC;wBAAE,WAAU;;4BAAgB;4BAAU,aAAa,OAAO;;;;;;;;;;;;;YAI9D,uBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;AAKvC","debugId":null}},
    {"offset": {"line": 2055, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/utils/userUtils.ts"],"sourcesContent":["interface User {\n  id?: string;\n  [key: string]: unknown;\n}\n\n/**\n * Attempts to find a valid user ID from various possible properties\n */\nexport const getUserId = (user: User | null | undefined): string | null => {\n  if (!user) return null;\n\n  // Primary ID field\n  if (user.id) return String(user.id);\n\n  // Alternative ID fields\n  const possibleIdFields = [\"_id\", \"userId\", \"uid\", \"userID\"];\n\n  for (const field of possibleIdFields) {\n    const userRecord = user as Record<string, unknown>;\n    if (userRecord[field]) {\n      console.log(\n        `Found alternative ID field: ${field} with value: ${String(\n          userRecord[field]\n        )}`\n      );\n      return String(userRecord[field]);\n    }\n  }\n\n  return null;\n};\n\n/**\n * Validates if a user has a valid ID\n */\nexport const validateUserSession = (\n  user: User | null | undefined\n): { isValid: boolean; errorMessage?: string } => {\n  if (!user) {\n    return {\n      isValid: false,\n      errorMessage: \"Debes iniciar sesi√≥n para solicitar un duelo\",\n    };\n  }\n\n  const userId = getUserId(user);\n  if (!userId) {\n    return {\n      isValid: false,\n      errorMessage:\n        \"Tu sesi√≥n existe pero falta el ID de usuario. Intenta cerrar sesi√≥n y volver a iniciar.\",\n    };\n  }\n\n  return { isValid: true };\n};\n"],"names":[],"mappings":";;;;AAQO,MAAM,YAAY,CAAC;IACxB,IAAI,CAAC,MAAM,OAAO;IAElB,mBAAmB;IACnB,IAAI,KAAK,EAAE,EAAE,OAAO,OAAO,KAAK,EAAE;IAElC,wBAAwB;IACxB,MAAM,mBAAmB;QAAC;QAAO;QAAU;QAAO;KAAS;IAE3D,KAAK,MAAM,SAAS,iBAAkB;QACpC,MAAM,aAAa;QACnB,IAAI,UAAU,CAAC,MAAM,EAAE;YACrB,QAAQ,GAAG,CACT,CAAC,4BAA4B,EAAE,MAAM,aAAa,EAAE,OAClD,UAAU,CAAC,MAAM,GAChB;YAEL,OAAO,OAAO,UAAU,CAAC,MAAM;QACjC;IACF;IAEA,OAAO;AACT;AAKO,MAAM,sBAAsB,CACjC;IAEA,IAAI,CAAC,MAAM;QACT,OAAO;YACL,SAAS;YACT,cAAc;QAChB;IACF;IAEA,MAAM,SAAS,UAAU;IACzB,IAAI,CAAC,QAAQ;QACX,OAAO;YACL,SAAS;YACT,cACE;QACJ;IACF;IAEA,OAAO;QAAE,SAAS;IAAK;AACzB","debugId":null}},
    {"offset": {"line": 2103, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useCallback } from \"react\";\nimport { TrophyIcon } from \"@heroicons/react/24/outline\";\nimport { useAuthApollo } from \"@/lib/auth-context-apollo\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\nimport QuizScreen from \"./components/quizScreen\";\n\n// Hooks\nimport { useWebSocketNotifications } from \"./hooks/useWebSocketNotifications\";\nimport { useDuelWebSocket } from \"./hooks/useDuelWebSocket\";\nimport { useDuelOperations } from \"./hooks/useDuelOperations\";\n\n// Components\nimport DuelLanding from \"./components/DuelLanding\";\nimport OpponentSearch from \"./components/OpponentSearch\";\nimport PendingChallenges from \"./components/PendingChallenges\";\nimport DuelInfo from \"./components/DuelInfo\";\n\n// Utils\nimport { getUserId, validateUserSession } from \"./utils/userUtils\";\n\nfunction DuelosContent() {\n  const { user } = useAuthApollo();\n  const [showQuiz, setShowQuiz] = useState(false);\n  const [preparingDuel, setPreparingDuel] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Custom hooks\n  const {\n    pendingChallenges,\n    removeChallenge,\n    connectionError: notificationError,\n    isConnected: notificationConnected,\n  } = useWebSocketNotifications(user?.id);\n\n  const {\n    wsConnection,\n    connectToDuel,\n    disconnect: disconnectDuel,\n    connectionError: duelConnectionError,\n    isConnecting: duelConnecting,\n  } = useDuelWebSocket();\n\n  const {\n    opponentEmail,\n    setOpponentEmail,\n    foundUser,\n    searchUser,\n    searchLoading,\n    requestDuel,\n    acceptDuel,\n    requestLoading,\n    acceptLoading,\n    duelResponse,\n  } = useDuelOperations();\n\n  // Combine all errors\n  const combinedError = error || notificationError || duelConnectionError;\n\n  // Handle opponent search\n  const handleSearchOpponent = useCallback(async () => {\n    try {\n      setError(null);\n      await searchUser();\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"Error al buscar el usuario\"\n      );\n    }\n  }, [searchUser]);\n\n  // Handle duel request\n  const handleRequestDuel = useCallback(async () => {\n    if (duelConnecting || preparingDuel) {\n      console.log(\"Already processing duel, skipping request\");\n      return;\n    }\n\n    try {\n      setError(null);\n      setPreparingDuel(true);\n\n      // Validate user session\n      const validation = validateUserSession(user);\n      if (!validation.isValid) {\n        setError(validation.errorMessage!);\n        setPreparingDuel(false);\n        return;\n      }\n\n      if (!foundUser) {\n        setError(\"Debes buscar y seleccionar un oponente primero\");\n        setPreparingDuel(false);\n        return;\n      }\n\n      const userId = getUserId(user)!;\n      const response = await requestDuel(userId, foundUser.id);\n\n      // Connect to duel WebSocket\n      if (response.duelId) {\n        console.log(\n          `[REQUESTER ${userId}] Connecting to duel: ${response.duelId}`\n        );\n        await connectToDuel(response.duelId, userId);\n        console.log(`[REQUESTER ${userId}] Connected, preparing quiz screen`);\n\n        // Small delay to ensure everything is ready\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        setShowQuiz(true);\n        setPreparingDuel(false);\n        console.log(`[REQUESTER ${userId}] Quiz screen shown`);\n      }\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"Error al solicitar el duelo\"\n      );\n      setPreparingDuel(false);\n    }\n  }, [\n    user,\n    foundUser,\n    requestDuel,\n    connectToDuel,\n    duelConnecting,\n    preparingDuel,\n  ]);\n\n  // Handle challenge accept\n  const handleChallengeAccept = useCallback(\n    async (duelId: string) => {\n      if (duelConnecting || preparingDuel) {\n        console.log(\"Already processing duel, skipping accept\");\n        return;\n      }\n\n      try {\n        setError(null);\n        setPreparingDuel(true);\n\n        // Validate user session\n        const validation = validateUserSession(user);\n        if (!validation.isValid) {\n          setError(validation.errorMessage!);\n          setPreparingDuel(false);\n          return;\n        }\n\n        const userId = getUserId(user)!;\n        console.log(`[ACCEPTOR ${userId}] Accepting duel: ${duelId}`);\n        await acceptDuel(duelId);\n\n        // Small delay to ensure backend has processed the acceptance\n        await new Promise((resolve) => setTimeout(resolve, 500));\n\n        // Connect to duel WebSocket\n        console.log(`[ACCEPTOR ${userId}] Connecting to duel: ${duelId}`);\n        await connectToDuel(duelId, userId);\n        console.log(`[ACCEPTOR ${userId}] Connected, preparing quiz screen`);\n\n        // Additional delay for acceptor to ensure synchronization\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        setShowQuiz(true);\n        setPreparingDuel(false);\n        console.log(`[ACCEPTOR ${userId}] Quiz screen shown`);\n\n        // Remove from pending challenges\n        removeChallenge(duelId);\n      } catch (err) {\n        setError(\n          err instanceof Error ? err.message : \"Error al aceptar el duelo\"\n        );\n        setPreparingDuel(false);\n      }\n    },\n    [\n      user,\n      acceptDuel,\n      connectToDuel,\n      removeChallenge,\n      duelConnecting,\n      preparingDuel,\n    ]\n  );\n\n  // Handle challenge reject\n  const handleChallengeReject = useCallback(\n    (duelId: string) => {\n      removeChallenge(duelId);\n    },\n    [removeChallenge]\n  );\n\n  // Handle quiz exit\n  const handleQuizExit = useCallback(() => {\n    setShowQuiz(false);\n    setPreparingDuel(false);\n    disconnectDuel();\n    // Clear foundUser to prevent issues with subsequent duels\n    setOpponentEmail(\"\");\n  }, [disconnectDuel, setOpponentEmail]);\n\n  if (preparingDuel) {\n    return (\n      <div className=\"container mx-auto p-4\">\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-emerald-500 mx-auto mb-4\"></div>\n            <h2 className=\"text-xl font-semibold text-gray-700\">\n              Preparando el duelo...\n            </h2>\n            <p className=\"text-gray-500 mt-2\">Sincronizando con el servidor</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (showQuiz) {\n    return (\n      <div className=\"container mx-auto p-4\">\n        <QuizScreen\n          wsConnection={wsConnection}\n          playerId={getUserId(user) || \"\"}\n          opponentId={foundUser?.id || \"user_002\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <div className=\"mx-auto px-4 py-8 container\">\n        <div className=\"text-center mb-6\">\n          <p className=\"text-3xl font-bold text-emerald-700 flex items-center justify-center gap-2\">\n            <TrophyIcon className=\"w-8 h-8\" />\n            Duelos Acad√©micos\n          </p>\n\n          {/* Indicador de conexi√≥n WebSocket */}\n          <div className=\"mt-2 flex items-center justify-center gap-2\">\n            <div\n              className={`w-2 h-2 rounded-full ${\n                notificationConnected ? \"bg-green-500\" : \"bg-red-500\"\n              }`}\n            ></div>\n            <span\n              className={`text-sm ${\n                notificationConnected ? \"text-green-600\" : \"text-red-600\"\n              }`}\n            >\n              {notificationConnected\n                ? \"Conectado a notificaciones\"\n                : \"Desconectado de notificaciones\"}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"lg:flex-row flex flex-col gap-8\">\n          <DuelLanding />\n\n          <div className=\"lg:w-1/2 space-y-6\">\n            <OpponentSearch\n              opponentEmail={opponentEmail}\n              setOpponentEmail={setOpponentEmail}\n              onSearch={handleSearchOpponent}\n              onRequestDuel={handleRequestDuel}\n              foundUser={foundUser}\n              searchLoading={searchLoading}\n              requestLoading={requestLoading || duelConnecting || preparingDuel}\n            />\n\n            <PendingChallenges\n              challenges={pendingChallenges}\n              onAccept={handleChallengeAccept}\n              onReject={handleChallengeReject}\n              acceptLoading={acceptLoading || duelConnecting || preparingDuel}\n            />\n\n            <DuelInfo duelResponse={duelResponse} error={combinedError} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function Duelos() {\n  return (\n    <ProtectedRoute>\n      <DuelosContent />\n    </ProtectedRoute>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}