{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/graphql/mutations/duel.ts"],"sourcesContent":["export const REQUEST_DUEL = `\n  mutation RequestDuel($input: RequestDuelInput!) {\n    requestDuel(input: $input) {\n      duelId\n      message\n    }\n  }\n`;\n\nexport const ACCEPT_DUEL = `\n  mutation AcceptDuel($input: AcceptDuelInput!) {\n    acceptDuel(input: $input) {\n      duelId\n      message\n    }\n  }\n`;\n"],"names":[],"mappings":";;;;AAAO,MAAM,eAAe,CAAC;;;;;;;AAO7B,CAAC;AAEM,MAAM,cAAc,CAAC;;;;;;;AAO5B,CAAC","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///home/juan/C%C3%B3digo/CourseClash/CourseClash/frontend/app/duelos/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { REQUEST_DUEL, ACCEPT_DUEL } from '../graphql/mutations/duel';\nimport { RequestDuelResponse, AcceptDuelResponse } from '../types/duel';\nimport { fetchGraphQL } from '@/lib/graphql-client';\n\nexport default function Duelos() {\n  const [duelResponse, setDuelResponse] = useState<RequestDuelResponse | null>(\n    null\n  );\n  const [acceptResponse, setAcceptResponse] =\n    useState<AcceptDuelResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [wsConnection, setWsConnection] = useState<WebSocket | null>(null);\n  const [wsMessages, setWsMessages] = useState<string[]>([]);\n  const [formData, setFormData] = useState({\n    duelId: '',\n    playerId: '',\n  });\n  const [acceptFormData, setAcceptFormData] = useState({\n    duelId: '',\n  });\n  const [messageInput, setMessageInput] = useState('');\n\n  // Limpiar la conexión WebSocket cuando el componente se desmonte\n  useEffect(() => {\n    return () => {\n      if (wsConnection) {\n        wsConnection.close();\n      }\n    };\n  }, [wsConnection]);\n\n  const handleRequestDuel = async () => {\n    setIsLoading(true);\n    try {\n      const data = await fetchGraphQL({\n        query: REQUEST_DUEL,\n        variables: {\n          input: {\n            requesterId: 'user_001',\n            opponentId: 'user_002',\n          },\n        },\n      });\n\n      setDuelResponse(data.requestDuel);\n      setError(null);\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : 'Error al solicitar el duelo'\n      );\n      setDuelResponse(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAcceptDuel = async () => {\n    if (!acceptFormData.duelId) {\n      setError('Por favor, ingresa el ID del duelo');\n      return;\n    }\n\n    setIsAccepting(true);\n    try {\n      const data = await fetchGraphQL({\n        query: ACCEPT_DUEL,\n        variables: {\n          input: {\n            duelId: acceptFormData.duelId,\n          },\n        },\n      });\n\n      setAcceptResponse(data.acceptDuel);\n      setError(null);\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : 'Error al aceptar el duelo'\n      );\n      setAcceptResponse(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  };\n\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAcceptFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setAcceptFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleConnectWebSocket = () => {\n    if (!formData.duelId || !formData.playerId) {\n      setError('Por favor, completa todos los campos');\n      return;\n    }\n\n    // Cerrar conexión existente si hay una\n    if (wsConnection) {\n      wsConnection.close();\n    }\n\n    // Crear nueva conexión WebSocket\n    const ws = new WebSocket(\n      `ws://localhost:8002/ws/duels/${formData.duelId}/${formData.playerId}`\n    );\n\n    ws.onopen = () => {\n      setError(null);\n      setWsMessages((prev) => [...prev, 'Conexión establecida']);\n    };\n\n    ws.onmessage = (event) => {\n      setWsMessages((prev) => [...prev, event.data]);\n    };\n\n    ws.onerror = (error) => {\n      setError('Error en la conexión WebSocket');\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = () => {\n      setWsMessages((prev) => [...prev, 'Conexión cerrada']);\n    };\n\n    setWsConnection(ws);\n  };\n\n  const handleSendMessage = () => {\n    if (!wsConnection || wsConnection.readyState !== WebSocket.OPEN) {\n      setError('No hay conexión WebSocket activa');\n      return;\n    }\n\n    if (!messageInput.trim()) {\n      setError('El mensaje no puede estar vacío');\n      return;\n    }\n\n    try {\n      // Enviamos el mensaje en el formato que espera el backend\n      wsConnection.send(\n        JSON.stringify({\n          answer: messageInput,\n        })\n      );\n      setMessageInput('');\n      setError(null);\n    } catch (err) {\n      setError('Error al enviar el mensaje');\n      console.error('Error sending message:', err);\n    }\n  };\n\n  return (\n    <div className='container mx-auto p-4'>\n      <h1 className='text-2xl font-bold mb-4'>Duelos</h1>\n\n      <div className='mb-8'>\n        <h2 className='text-xl font-semibold mb-4'>Solicitar Duelo</h2>\n        <button\n          onClick={handleRequestDuel}\n          disabled={isLoading}\n          className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded ${\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n        >\n          {isLoading ? 'Solicitando...' : 'Solicitar Duelo'}\n        </button>\n\n        {duelResponse && (\n          <div className='mt-4 p-4 bg-green-100 rounded'>\n            <h2 className='font-bold'>Duelo Solicitado:</h2>\n            <p>ID del Duelo: {duelResponse.duelId}</p>\n            <p>Mensaje: {duelResponse.message}</p>\n          </div>\n        )}\n      </div>\n\n      <div className='mb-8'>\n        <h2 className='text-xl font-semibold mb-4'>Aceptar Duelo</h2>\n        <div className='space-y-4'>\n          <div>\n            <label\n              htmlFor='acceptDuelId'\n              className='block text-sm font-medium text-gray-700'\n            >\n              ID del Duelo\n            </label>\n            <input\n              type='text'\n              id='acceptDuelId'\n              name='duelId'\n              value={acceptFormData.duelId}\n              onChange={handleAcceptFormChange}\n              className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500'\n              placeholder='Ej: user_001_vs_user_002'\n            />\n          </div>\n          <button\n            onClick={handleAcceptDuel}\n            disabled={isAccepting}\n            className={`bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded ${\n              isAccepting ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          >\n            {isAccepting ? 'Aceptando...' : 'Aceptar Duelo'}\n          </button>\n        </div>\n\n        {acceptResponse && (\n          <div className='mt-4 p-4 bg-green-100 rounded'>\n            <h2 className='font-bold'>Duelo Aceptado:</h2>\n            <p>ID del Duelo: {acceptResponse.duelId}</p>\n            <p>Mensaje: {acceptResponse.message}</p>\n          </div>\n        )}\n      </div>\n\n      <div className='mb-8'>\n        <h2 className='text-xl font-semibold mb-4'>Conectar al Duelo</h2>\n        <div className='space-y-4'>\n          <div>\n            <label\n              htmlFor='duelId'\n              className='block text-sm font-medium text-gray-700'\n            >\n              ID del Duelo\n            </label>\n            <input\n              type='text'\n              id='duelId'\n              name='duelId'\n              value={formData.duelId}\n              onChange={handleFormChange}\n              className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500'\n              placeholder='Ej: user_001_vs_user_002'\n            />\n          </div>\n          <div>\n            <label\n              htmlFor='playerId'\n              className='block text-sm font-medium text-gray-700'\n            >\n              ID del Jugador\n            </label>\n            <input\n              type='text'\n              id='playerId'\n              name='playerId'\n              value={formData.playerId}\n              onChange={handleFormChange}\n              className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500'\n              placeholder='Ej: user_001'\n            />\n          </div>\n          <button\n            onClick={handleConnectWebSocket}\n            className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'\n          >\n            Conectar al Duelo\n          </button>\n        </div>\n      </div>\n\n      {wsMessages.length > 0 && (\n        <div className='mt-4'>\n          <h2 className='text-xl font-semibold mb-2'>Mensajes del Duelo:</h2>\n          <div className='bg-gray-100 p-4 rounded max-h-60 overflow-y-auto'>\n            {wsMessages.map((message, index) => (\n              <p key={index} className='mb-2'>\n                {message}\n              </p>\n            ))}\n          </div>\n          <div className='mt-4 flex gap-2'>\n            <input\n              type='text'\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n              placeholder='Escribe un mensaje...'\n              className='flex-1 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500'\n            />\n            <button\n              onClick={handleSendMessage}\n              className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'\n            >\n              Enviar\n            </button>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className='mt-4 p-4 bg-red-100 rounded'>\n          <h2 className='font-bold text-red-700'>Error:</h2>\n          <p>{error}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}