{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n// Lista de rutas protegidas que requieren autenticación\nconst protectedRoutes = [\n  '/dashboard',\n  '/duels',\n  '/courses',\n  '/profile',\n  '/configuracion',\n];\n\n// Lista de rutas que solo pueden acceder usuarios no autenticados\nconst authOnlyRoutes = ['/login', '/register', '/registro', '/forgot-password'];\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  // Obtener token de autenticación desde cookies\n  const authToken = request.cookies.get('auth_token')?.value;\n  const isAuthenticated = !!authToken;\n\n  // Verificar si la ruta actual es protegida\n  const isProtectedRoute = protectedRoutes.some((route) =>\n    pathname.startsWith(route)\n  );\n\n  // Verificar si la ruta actual es solo para usuarios no autenticados\n  const isAuthOnlyRoute = authOnlyRoutes.some((route) =>\n    pathname.startsWith(route)\n  );\n\n  // Si el usuario está autenticado y trata de acceder a rutas de auth\n  if (isAuthenticated && isAuthOnlyRoute) {\n    return NextResponse.redirect(new URL('/dashboard', request.url));\n  }\n\n  // Si el usuario no está autenticado y trata de acceder a rutas protegidas\n  if (!isAuthenticated && isProtectedRoute) {\n    const loginUrl = new URL('/login', request.url);\n    // Guardar la URL original para redireccionar después del login\n    loginUrl.searchParams.set('from', pathname);\n    return NextResponse.redirect(loginUrl);\n  }\n\n  return NextResponse.next();\n}\n\n// Configurar en qué rutas se ejecutará el middleware\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public (public files)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico|public).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,wDAAwD;AACxD,MAAM,kBAAkB;IACtB;IACA;IACA;IACA;IACA;CACD;AAED,kEAAkE;AAClE,MAAM,iBAAiB;IAAC;IAAU;IAAa;IAAa;CAAmB;AAExE,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,+CAA+C;IAC/C,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;IACrD,MAAM,kBAAkB,CAAC,CAAC;IAE1B,2CAA2C;IAC3C,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAC,QAC7C,SAAS,UAAU,CAAC;IAGtB,oEAAoE;IACpE,MAAM,kBAAkB,eAAe,IAAI,CAAC,CAAC,QAC3C,SAAS,UAAU,CAAC;IAGtB,oEAAoE;IACpE,IAAI,mBAAmB,iBAAiB;QACtC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,0EAA0E;IAC1E,IAAI,CAAC,mBAAmB,kBAAkB;QACxC,MAAM,WAAW,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC9C,+DAA+D;QAC/D,SAAS,YAAY,CAAC,GAAG,CAAC,QAAQ;QAClC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}}]
}